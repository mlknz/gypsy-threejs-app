!function(e){function t(i){if(n[i])return n[i].exports;var o=n[i]={exports:{},id:i,loaded:!1};return e[i].call(o.exports,o,o.exports,t),o.loaded=!0,o.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t,n){e.exports=n(1)},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var r=n(2),a=i(r),s=n(39),l=i(s),c=n(42),d=function e(){function t(){var e=Math.floor(i.clientWidth*s),t=Math.floor(i.clientHeight*s);i.width===e&&i.height===t||(i.width=e,i.height=t,r.setSize(i.clientWidth,i.clientHeight,!1),d.resize(e,t))}function n(){t(),d.update(f.getDelta()),u.update(),requestAnimationFrame(n)}if(o(this,e),!c())return void(document.body.innerHTML="Unable to initialize WebGL. Your browser may not support it.");var i=document.getElementById("canvas"),r=new THREE.WebGLRenderer({antialias:!0,alpha:!1,canvas:i}),s=window.devicePixelRatio||1;r.setPixelRatio(s);var d=new a.default(r);this.appViewer=d;var u=new l.default(r),f=new THREE.Clock;n()};window.app=new d},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),a=n(3),s=i(a),l=n(5),c=i(l),d=n(6),u=i(d),f=n(26),h=i(f),p=n(35),m=i(p),v=function(){function e(t){o(this,e),this.renderer=t,this.renderer.setClearColor(s.default.renderer.clearColor,s.default.renderer.clearAlpha),this.renderer.setPixelRatio(s.default.renderer.devicePixelRatio);var n=this.renderer.getContext(),i=n.canvas.clientWidth/n.canvas.clientHeight;this.sceneManager=new u.default,this.camera=new THREE.PerspectiveCamera(60,i,s.default.camera.near,s.default.camera.far),this.sceneReady=!1,document.addEventListener("sceneReady",this.onSceneReady.bind(this))}return r(e,[{key:"onSceneReady",value:function(){this.sceneReady=!0,this.controls=new m.default(this.camera,this.renderer.domElement,this.sceneManager.scene),this.controls.resetCameraOrbit(),this.appLogicManager=new h.default(this.renderer,this.sceneManager.scene,this.camera,this.controls);var e=this.sceneManager.scene.getObjectByName("navmesh");this.controls.addNavMeshes([e]),this.controls.addNavMeshes(this.appLogicManager.navMeshes);var t=this.sceneManager.scene.getObjectByName("space_navmesh");this.controls.addSpaceNavMesh(t)}},{key:"update",value:function(e){this.sceneReady&&(c.default.paused||(s.default.time+=e,this.controls.update(e),this.appLogicManager.update(e),this.renderer.render(this.sceneManager.scene,this.camera)))}},{key:"resize",value:function(e,t){var n=e/t;this.camera.aspect!==n&&(this.camera.aspect=n,this.camera.updateProjectionMatrix())}},{key:"dispose",value:function(){this.controls.dispose()}}]),e}();t.default=v},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=n(4)(),o={repoUrl:"https://github.com/mlknz/spaceship-indweller",isDesktop:i.desktop(),isDebug:"debug"===window.location.hash.substr(1),isIOS:/iPad|iPhone|iPod/.test(navigator.userAgent)&&!window.MSStream,useDDSTextures:!0,usePVRTextures:!0,time:0,introDuration:2,lightsInDuration:.8,renderer:{clearColor:1315876,clearAlpha:!0,devicePixelRatio:window.devicePixelRatio||1},camera:{cameraPos:[-146,86,150],cameraIntroTargetPos:[-81,30,-0],near:1,far:1400,walkerNear:.1,walkerFar:840},walker:{startPos:[-47,8,-29],startYaw:-1.8,startPitch:0},spaceWalker:{blockingRayMin:2,blockingRayMax:3,blockingRayLength:10,pullOutDuration:.7},controls:{minDistance:1,maxDistance:500,rotateSpeed:.25,joystickReturnSpeed:15},appLogic:{doors:{openingTime:1.2},gatewayControlsChangeDecay:1400}};t.default=o},function(e,t,n){var i,o;!function(t){"use strict";var n=function(e,t){function n(t){return e.indexOf(t)!==-1}function i(e){var t;return t=new RegExp(e,"i"),l.className.match(t)}function o(e){i(e)||(l.className+=" "+e)}function r(e){i(e)&&(l.className=l.className.replace(e,""))}function a(t){var n=e.match(t);return n&&n.length>1&&n[1]||""}var s={},l=t||window.document.documentElement;e=(e||window.navigator.userAgent).toLowerCase(),s.ios=function(){return s.iphone()||s.ipod()||s.ipad()},s.iphone=function(){return n("iphone")},s.ipod=function(){return n("ipod")},s.ipad=function(){return n("ipad")},s.android=function(){return n("android")},s.androidPhone=function(){return s.android()&&n("mobile")},s.androidTablet=function(){return s.android()&&!n("mobile")},s.blackberry=function(){return n("blackberry")||n("bb10")||n("rim")},s.blackberryPhone=function(){return s.blackberry()&&!n("tablet")},s.blackberryTablet=function(){return s.blackberry()&&n("tablet")},s.windows=function(){return n("windows")},s.windowsPhone=function(){return s.windows()&&n("phone")},s.windowsTablet=function(){return s.windows()&&n("touch")&&!s.windowsPhone()},s.fxos=function(){return(n("(mobile;")||n("(tablet;"))&&n("; rv:")},s.fxosPhone=function(){return s.fxos()&&n("mobile")},s.fxosTablet=function(){return s.fxos()&&n("tablet")},s.meego=function(){return n("meego")},s.cordova=function(){return window.cordova&&"file:"===location.protocol},s.nodeWebkit=function(){return"object"==typeof window.process},s.bada=function(){return n("bada")},s.mobile=function(){return s.androidPhone()||s.iphone()||s.ipod()||s.windowsPhone()||s.blackberryPhone()||s.fxosPhone()||s.meego()},s.tablet=function(){return s.ipad()||s.androidTablet()||s.blackberryTablet()||s.windowsTablet()||s.fxosTablet()},s.desktop=function(){return!s.tablet()&&!s.mobile()},s.portrait=function(){return window.innerHeight/window.innerWidth>1},s.landscape=function(){return window.innerHeight/window.innerWidth<1},s.standAlone=function(){return window.navigator.standalone===!0},s.addClasses=function(){s._hasAddClasses||(s._hasAddClasses=!0,s.ios()?s.ipad()?o("ios ipad tablet"):s.iphone()?o("ios iphone mobile"):s.ipod()&&o("ios ipod mobile"):o(s.android()?s.androidTablet()?"android tablet":"android mobile":s.blackberry()?s.blackberryTablet()?"blackberry tablet":"blackberry mobile":s.windows()?s.windowsTablet()?"windows tablet":s.windowsPhone()?"windows mobile":"desktop":s.fxos()?s.fxosTablet()?"fxos tablet":"fxos mobile":s.meego()?"meego mobile":s.nodeWebkit()?"node-webkit":"desktop"),s.cordova()&&o("cordova"),s.standAlone()&&o("standalone"))};var c="";return s.ios()?(c=a(/os (\d+([_\s]\d+)*) like mac os x/i),c=c.replace(/[_\s]/g,".")):s.android()?c=a(/android[ \/-](\d+(\.\d+)*)/i):s.windowsPhone()?c=a(/windows phone (?:os)?\s?(\d+(\.\d+)*)/i):s.blackberry()?c=a(/rim\stablet\sos\s(\d+(\.\d+)*)/i):s.bada()&&(c=a(/bada\/(\d+(\.\d+)*)/i)),c&&(s.osversion=c),s.addOrientationClasses=function(){if(!s.hasOrientationListener){s.hasOrientationListener=!0;var e=function(){return s.landscape()?(r("portrait"),o("landscape")):(r("landscape"),o("portrait"))},t="onorientationchange"in window?"orientationchange":"resize";window.addEventListener?window.addEventListener(t,e,!1):window.attachEvent?window.attachEvent(t,e):window[t]=e,e()}},s};"undefined"!=typeof e&&e.exports?e.exports=n:(i=[],o=function(){return n}.apply(t,i),!(void 0!==o&&(e.exports=o)))}(this)},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n={started:!1,paused:!1,win:!1,lose:!1,gameoverMessage:"Game Over",introStartTime:-1,gameStartTime:-1,controlPanelActive:!1,pickups:{suit:!1,repairKit:!1},engineEnabled:!0,pipeRepaired:!1,inSpace:!1,doorsOpen:{}};t.default=n},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),s=n(7),l=i(s),c=n(18),d=i(c),u=n(19),f=i(u),h=n(20),p=i(h),m=n(24),v=i(m),g=new Event("sceneReady"),E=function(){function e(){r(this,e),this.scene=new THREE.Scene,this.assetsLoader=new l.default(this.scene),this.materialDecorator=new p.default(f.default),this.batcher=new v.default(this.scene,this.materialDecorator),document.addEventListener("assetsLoaded",this.onAssetsLoaded.bind(this)),this.assetsLoader.loadAssets(d.default.assets)}return a(e,[{key:"onAssetsLoaded",value:function(){this.createSceneFromDescription(this.scene),this.scene.updateMatrixWorld(),this.materialDecorator.rewriteSingleMaterials(this.scene,this.assetsLoader.assets.textures),this.batcher.batchSameGeomIdUndecoratedMeshes({batchMeshesWithChildren:!0,excludeIfNameContains:["door_left","door_right","door_controls","door_nav_blocker"]}),this.hideNavigationMeshes(),document.dispatchEvent(g)}},{key:"hideNavigationMeshes",value:function(){this.scene.traverse(function(e){e.material&&e.material.name.includes("navmesh")&&(e.material.visible=!1)})}},{key:"createSceneFromDescription",value:function(e){this.addChildrenFromDescription(e,d.default.model.children)}},{key:"addChildrenFromDescription",value:function(e,t){var n=this,i=void 0;t.forEach(function(t){i=n.createObjectFromDescription(t),e.add(i),t.children&&t.children.length>0&&n.addChildrenFromDescription(i,t.children)})}},{key:"createObjectFromDescription",value:function(e){var t=null,n=null,i="Object3D";e.object&&e.object.type?i=e.object.type:e.type&&(i=e.type),e.object&&e.object.args?n=e.object.args:e.args&&(n=e.args);for(var r in n)n.hasOwnProperty(r)&&n[r].type&&"asset/texture"===n[r].type&&(n[r]=this.assetsLoader.assets.textures[n[r].name]);if("asset/json"===i)t=this.assetsLoader.assets.objects[e.name];else if("Mesh"===i||e.object&&e.object.geometry){var a=this.createObjectFromDescription(e.object.geometry),s=null;e.object.material&&(s=this.createObjectFromDescription(e.object.material)),t=new THREE.Mesh(a,s)}else t=n instanceof Array?new(Function.prototype.bind.apply(THREE[i],[null].concat(o(n)))):new THREE[i](n);return t||(t=new THREE.Object3D),e.properties&&this.addObjectProperties(t,e.properties),t}},{key:"addObjectProperties",value:function(e,t){var n=void 0,i=void 0;for(n in t)if(t.hasOwnProperty(n))if(t[n]instanceof Object){e[n]||(e[n]={});for(i in t[n])t[n].hasOwnProperty(i)&&(e[n][i]=t[n][i])}else e[n]=t[n]}}]),e}();t.default=E},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),a=n(3),s=i(a),l=n(8),c=new Event("assetsLoaded");window.THREE=window.THREE||THREE,n(16),n(17);var d=0,u=0,f=function(){function e(t){o(this,e),this.scene=t,this.assets={objects:{},textures:{}},this.objectLoader=new THREE.ObjectLoader,this.textureLoader=new THREE.TextureLoader,this.useDDS=!s.default.isIOS&&s.default.useDDSTextures,this.usePVR=s.default.isIOS&&s.default.usePVRTextures,this.DDSLoader=new THREE.DDSLoader,this.PVRLoader=new THREE.PVRLoader}return r(e,[{key:"loadAssets",value:function(e){var t=this,n=[],i=void 0,o=void 0,r=void 0,a=void 0,s=void 0;this.initProgressBar(),e.forEach(function(e){switch(e.type){case"json":o=e.path,a=t.objectLoader,s=t.assets.objects,r=e.name;break;case"texture":if(o=e.path,a=t.textureLoader,s=t.assets.textures,r=e.name,e.path instanceof Array)for(var l=0;l<e.path.length;l++){if(o=e.path[l],t.useDDS&&e.path[l].includes(".dds")){a=t.DDSLoader;break}if(t.usePVR&&e.path[l].includes(".pvr")){a=t.PVRLoader;break}}break;default:throw new Error("unknow asset type in sceneDescription: "+e.type)}i=t.loadEntry(o,s,r,a),n.push(i)}),Promise.all(n).then(function(){t.loadingFinished()})}},{key:"loadEntry",value:function(e,t,n,i){var o=this;return new Promise(function(r,a){i.load(e,function(e){t[n]=e,r()},function(e){s.default.isDebug&&console.log(e.loaded/e.total*100+"% loaded"),o.updateProgressBar(e.loaded,e.total,n)},function(e){console.log("error while loading model",e),a(e)})})}},{key:"initProgressBar",value:function(){this.progress=-1,this.assetsSizes={};var e=document.getElementById("progressBar");this.progressbar=new l.Line(e,{from:{color:"#557788"},to:{color:"#224455"},easing:"easeInOut",duration:1400,svgStyle:{display:"block",width:"100%",height:"100%",boxSizing:"border-box",borderRadius:"37px"},text:{value:"loading",style:{color:"#000",position:"absolute",left:"50%",top:"50%",padding:0,margin:0,fontWeight:"bold",fontSize:"6vh",transform:{prefix:!0,value:"translate(-50%, -50%)"}}},step:function(e,t){t.path.setAttribute("stroke",e.color)}})}},{key:"loadingFinished",value:function(){var e=document.getElementById("loadingScreen");e.className="loadingScreen-hidden",setTimeout(function(){e.style.display="none"},700),document.dispatchEvent(c)}},{key:"updateProgressBar",value:function(e,t,n){if(!this.assetsSizes[n]&&!isNaN(t)&&t>0&&(this.assetsSizes[n]={},this.assetsSizes[n].loaded=e,this.assetsSizes[n].size=t),this.assetsSizes[n]&&!isNaN(t)&&!isNaN(e)){d=0,u=0,this.assetsSizes[n].loaded=e;for(var i in this.assetsSizes)this.assetsSizes.hasOwnProperty(i)&&(d+=this.assetsSizes[i].loaded,u+=this.assetsSizes[i].size);this.progress=Math.max(d/u,this.progress),this.progressbar.set(this.progress)}}}]),e}();t.default=f},function(e,t,n){e.exports={Line:n(9),Circle:n(14),SemiCircle:n(15),Path:n(11),Shape:n(10),utils:n(13)}},function(e,t,n){var i=n(10),o=n(13),r=function(e,t){this._pathTemplate="M 0,{center} L 100,{center}",i.apply(this,arguments)};r.prototype=new i,r.prototype.constructor=r,r.prototype._initializeSvg=function(e,t){e.setAttribute("viewBox","0 0 100 "+t.strokeWidth),e.setAttribute("preserveAspectRatio","none")},r.prototype._pathString=function(e){return o.render(this._pathTemplate,{center:e.strokeWidth/2})},r.prototype._trailString=function(e){return this._pathString(e)},e.exports=r},function(e,t,n){var i=n(11),o=n(13),r="Object is destroyed",a=function e(t,n){if(!(this instanceof e))throw new Error("Constructor was called without new keyword");if(0!==arguments.length){this._opts=o.extend({color:"#555",strokeWidth:1,trailColor:null,trailWidth:null,fill:null,text:{style:{color:null,position:"absolute",left:"50%",top:"50%",padding:0,margin:0,transform:{prefix:!0,value:"translate(-50%, -50%)"}},autoStyleContainer:!0,alignToBottom:!0,value:null,className:"progressbar-text"},svgStyle:{display:"block",width:"100%"},warnings:!1},n,!0),o.isObject(n)&&void 0!==n.svgStyle&&(this._opts.svgStyle=n.svgStyle),o.isObject(n)&&o.isObject(n.text)&&void 0!==n.text.style&&(this._opts.text.style=n.text.style);var r,a=this._createSvgView(this._opts);if(r=o.isString(t)?document.querySelector(t):t,!r)throw new Error("Container does not exist: "+t);this._container=r,this._container.appendChild(a.svg),this._opts.warnings&&this._warnContainerAspectRatio(this._container),this._opts.svgStyle&&o.setStyles(a.svg,this._opts.svgStyle),this.svg=a.svg,this.path=a.path,this.trail=a.trail,this.text=null;var s=o.extend({attachment:void 0,shape:this},this._opts);this._progressPath=new i(a.path,s),o.isObject(this._opts.text)&&null!==this._opts.text.value&&this.setText(this._opts.text.value)}};a.prototype.animate=function(e,t,n){if(null===this._progressPath)throw new Error(r);this._progressPath.animate(e,t,n)},a.prototype.stop=function(){if(null===this._progressPath)throw new Error(r);void 0!==this._progressPath&&this._progressPath.stop()},a.prototype.destroy=function(){if(null===this._progressPath)throw new Error(r);this.stop(),this.svg.parentNode.removeChild(this.svg),this.svg=null,this.path=null,this.trail=null,this._progressPath=null,null!==this.text&&(this.text.parentNode.removeChild(this.text),this.text=null)},a.prototype.set=function(e){if(null===this._progressPath)throw new Error(r);this._progressPath.set(e)},a.prototype.value=function(){if(null===this._progressPath)throw new Error(r);return void 0===this._progressPath?0:this._progressPath.value()},a.prototype.setText=function(e){if(null===this._progressPath)throw new Error(r);null===this.text&&(this.text=this._createTextContainer(this._opts,this._container),this._container.appendChild(this.text)),o.isObject(e)?(o.removeChildren(this.text),this.text.appendChild(e)):this.text.innerHTML=e},a.prototype._createSvgView=function(e){var t=document.createElementNS("http://www.w3.org/2000/svg","svg");this._initializeSvg(t,e);var n=null;(e.trailColor||e.trailWidth)&&(n=this._createTrail(e),t.appendChild(n));var i=this._createPath(e);return t.appendChild(i),{svg:t,path:i,trail:n}},a.prototype._initializeSvg=function(e,t){e.setAttribute("viewBox","0 0 100 100")},a.prototype._createPath=function(e){var t=this._pathString(e);return this._createPathElement(t,e)},a.prototype._createTrail=function(e){var t=this._trailString(e),n=o.extend({},e);return n.trailColor||(n.trailColor="#eee"),n.trailWidth||(n.trailWidth=n.strokeWidth),n.color=n.trailColor,n.strokeWidth=n.trailWidth,n.fill=null,this._createPathElement(t,n)},a.prototype._createPathElement=function(e,t){var n=document.createElementNS("http://www.w3.org/2000/svg","path");return n.setAttribute("d",e),n.setAttribute("stroke",t.color),n.setAttribute("stroke-width",t.strokeWidth),t.fill?n.setAttribute("fill",t.fill):n.setAttribute("fill-opacity","0"),n},a.prototype._createTextContainer=function(e,t){var n=document.createElement("div");n.className=e.text.className;var i=e.text.style;return i&&(e.text.autoStyleContainer&&(t.style.position="relative"),o.setStyles(n,i),i.color||(n.style.color=e.color)),this._initializeTextContainer(e,t,n),n},a.prototype._initializeTextContainer=function(e,t,n){},a.prototype._pathString=function(e){throw new Error("Override this function for each progress bar")},a.prototype._trailString=function(e){throw new Error("Override this function for each progress bar")},a.prototype._warnContainerAspectRatio=function(e){if(this.containerAspectRatio){var t=window.getComputedStyle(e,null),n=parseFloat(t.getPropertyValue("width"),10),i=parseFloat(t.getPropertyValue("height"),10);o.floatEquals(this.containerAspectRatio,n/i)||(console.warn("Incorrect aspect ratio of container","#"+e.id,"detected:",t.getPropertyValue("width")+"(width)","/",t.getPropertyValue("height")+"(height)","=",n/i),console.warn("Aspect ratio of should be",this.containerAspectRatio))}},e.exports=a},function(e,t,n){var i=n(12),o=n(13),r={easeIn:"easeInCubic",easeOut:"easeOutCubic",easeInOut:"easeInOutCubic"},a=function e(t,n){if(!(this instanceof e))throw new Error("Constructor was called without new keyword");n=o.extend({duration:800,easing:"linear",from:{},to:{},step:function(){}},n);var i;i=o.isString(t)?document.querySelector(t):t,this.path=i,this._opts=n,this._tweenable=null;var r=this.path.getTotalLength();this.path.style.strokeDasharray=r+" "+r,this.set(0)};a.prototype.value=function(){var e=this._getComputedDashOffset(),t=this.path.getTotalLength(),n=1-e/t;return parseFloat(n.toFixed(6),10)},a.prototype.set=function(e){this.stop(),this.path.style.strokeDashoffset=this._progressToOffset(e);var t=this._opts.step;if(o.isFunction(t)){var n=this._easing(this._opts.easing),i=this._calculateTo(e,n),r=this._opts.shape||this;t(i,r,this._opts.attachment)}},a.prototype.stop=function(){this._stopTween(),this.path.style.strokeDashoffset=this._getComputedDashOffset()},a.prototype.animate=function(e,t,n){t=t||{},o.isFunction(t)&&(n=t,t={});var r=o.extend({},t),a=o.extend({},this._opts);t=o.extend(a,t);var s=this._easing(t.easing),l=this._resolveFromAndTo(e,s,r);this.stop(),this.path.getBoundingClientRect();var c=this._getComputedDashOffset(),d=this._progressToOffset(e),u=this;this._tweenable=new i,this._tweenable.tween({from:o.extend({offset:c},l.from),to:o.extend({offset:d},l.to),duration:t.duration,easing:s,step:function(e){u.path.style.strokeDashoffset=e.offset;var n=t.shape||u;t.step(e,n,t.attachment)},finish:function(e){o.isFunction(n)&&n()}})},a.prototype._getComputedDashOffset=function(){var e=window.getComputedStyle(this.path,null);return parseFloat(e.getPropertyValue("stroke-dashoffset"),10)},a.prototype._progressToOffset=function(e){var t=this.path.getTotalLength();return t-e*t},a.prototype._resolveFromAndTo=function(e,t,n){return n.from&&n.to?{from:n.from,to:n.to}:{from:this._calculateFrom(t),to:this._calculateTo(e,t)}},a.prototype._calculateFrom=function(e){return i.interpolate(this._opts.from,this._opts.to,this.value(),e)},a.prototype._calculateTo=function(e,t){return i.interpolate(this._opts.from,this._opts.to,e,t)},a.prototype._stopTween=function(){null!==this._tweenable&&(this._tweenable.stop(),this._tweenable=null)},a.prototype._easing=function(e){return r.hasOwnProperty(e)?r[e]:e},e.exports=a},function(e,t,n){(function(){var t=this||Function("return this")(),n=function(){"use strict";function n(){}function i(e,t){var n;for(n in e)Object.hasOwnProperty.call(e,n)&&t(n)}function o(e,t){return i(t,function(n){e[n]=t[n]}),e}function r(e,t){i(t,function(n){"undefined"==typeof e[n]&&(e[n]=t[n])})}function a(e,t,n,i,o,r,a){var l,c,d,u=e<r?0:(e-r)/o;for(l in t)t.hasOwnProperty(l)&&(c=a[l],d="function"==typeof c?c:f[c],t[l]=s(n[l],i[l],d,u));return t}function s(e,t,n,i){return e+(t-e)*n(i)}function l(e,t){var n=u.prototype.filter,o=e._filterArgs;i(n,function(i){"undefined"!=typeof n[i][t]&&n[i][t].apply(e,o)})}function c(e,t,n,i,o,r,s,c,d,u,f){y=t+n+i,b=Math.min(f||E(),y),_=b>=y,w=i-(y-b),e.isPlaying()&&(_?(d(s,e._attachment,w),e.stop(!0)):(e._scheduleId=u(e._timeoutHandler,v),l(e,"beforeTween"),b<t+n?a(1,o,r,s,1,1,c):a(b,o,r,s,i,t+n,c),l(e,"afterTween"),d(o,e._attachment,w)))}function d(e,t){var n={},o=typeof t;return"string"===o||"function"===o?i(e,function(e){n[e]=t}):i(e,function(e){n[e]||(n[e]=t[e]||p)}),n}function u(e,t){this._currentState=e||{},this._configured=!1,this._scheduleFunction=h,"undefined"!=typeof t&&this.setConfig(t)}var f,h,p="linear",m=500,v=1e3/60,g=Date.now?Date.now:function(){return+new Date},E="undefined"!=typeof SHIFTY_DEBUG_NOW?SHIFTY_DEBUG_NOW:g;h="undefined"!=typeof window?window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||window.mozCancelRequestAnimationFrame&&window.mozRequestAnimationFrame||setTimeout:setTimeout;var y,b,_,w;return u.prototype.tween=function(e){return this._isTweening?this:(void 0===e&&this._configured||this.setConfig(e),this._timestamp=E(),this._start(this.get(),this._attachment),this.resume())},u.prototype.setConfig=function(e){e=e||{},this._configured=!0,this._attachment=e.attachment,this._pausedAtTime=null,this._scheduleId=null,this._delay=e.delay||0,this._start=e.start||n,this._step=e.step||n,this._finish=e.finish||n,this._duration=e.duration||m,this._currentState=o({},e.from||this.get()),this._originalState=this.get(),this._targetState=o({},e.to||this.get());var t=this;this._timeoutHandler=function(){c(t,t._timestamp,t._delay,t._duration,t._currentState,t._originalState,t._targetState,t._easing,t._step,t._scheduleFunction)};var i=this._currentState,a=this._targetState;return r(a,i),this._easing=d(i,e.easing||p),this._filterArgs=[i,this._originalState,a,this._easing],l(this,"tweenCreated"),this},u.prototype.get=function(){return o({},this._currentState)},u.prototype.set=function(e){this._currentState=e},u.prototype.pause=function(){return this._pausedAtTime=E(),this._isPaused=!0,this},u.prototype.resume=function(){return this._isPaused&&(this._timestamp+=E()-this._pausedAtTime),this._isPaused=!1,this._isTweening=!0,this._timeoutHandler(),this},u.prototype.seek=function(e){e=Math.max(e,0);var t=E();return this._timestamp+e===0?this:(this._timestamp=t-e,this.isPlaying()||(this._isTweening=!0,this._isPaused=!1,c(this,this._timestamp,this._delay,this._duration,this._currentState,this._originalState,this._targetState,this._easing,this._step,this._scheduleFunction,t),this.pause()),this)},u.prototype.stop=function(e){return this._isTweening=!1,this._isPaused=!1,this._timeoutHandler=n,(t.cancelAnimationFrame||t.webkitCancelAnimationFrame||t.oCancelAnimationFrame||t.msCancelAnimationFrame||t.mozCancelRequestAnimationFrame||t.clearTimeout)(this._scheduleId),e&&(l(this,"beforeTween"),a(1,this._currentState,this._originalState,this._targetState,1,0,this._easing),l(this,"afterTween"),l(this,"afterTweenEnd"),this._finish.call(this,this._currentState,this._attachment)),this},u.prototype.isPlaying=function(){return this._isTweening&&!this._isPaused},u.prototype.setScheduleFunction=function(e){this._scheduleFunction=e},u.prototype.dispose=function(){var e;for(e in this)this.hasOwnProperty(e)&&delete this[e]},u.prototype.filter={},u.prototype.formula={linear:function(e){return e}},f=u.prototype.formula,o(u,{now:E,each:i,tweenProps:a,tweenProp:s,applyFilter:l,shallowCopy:o,defaults:r,composeEasingObject:d}),"function"==typeof SHIFTY_DEBUG_NOW&&(t.timeoutHandler=c),e.exports=u,u}();!function(){n.shallowCopy(n.prototype.formula,{easeInQuad:function(e){return Math.pow(e,2)},easeOutQuad:function(e){return-(Math.pow(e-1,2)-1)},easeInOutQuad:function(e){return(e/=.5)<1?.5*Math.pow(e,2):-.5*((e-=2)*e-2)},easeInCubic:function(e){return Math.pow(e,3)},easeOutCubic:function(e){return Math.pow(e-1,3)+1},easeInOutCubic:function(e){return(e/=.5)<1?.5*Math.pow(e,3):.5*(Math.pow(e-2,3)+2)},easeInQuart:function(e){return Math.pow(e,4)},easeOutQuart:function(e){return-(Math.pow(e-1,4)-1)},easeInOutQuart:function(e){return(e/=.5)<1?.5*Math.pow(e,4):-.5*((e-=2)*Math.pow(e,3)-2)},easeInQuint:function(e){return Math.pow(e,5)},easeOutQuint:function(e){return Math.pow(e-1,5)+1},easeInOutQuint:function(e){return(e/=.5)<1?.5*Math.pow(e,5):.5*(Math.pow(e-2,5)+2)},easeInSine:function(e){return-Math.cos(e*(Math.PI/2))+1},easeOutSine:function(e){return Math.sin(e*(Math.PI/2))},easeInOutSine:function(e){return-.5*(Math.cos(Math.PI*e)-1)},easeInExpo:function(e){return 0===e?0:Math.pow(2,10*(e-1))},easeOutExpo:function(e){return 1===e?1:-Math.pow(2,-10*e)+1},easeInOutExpo:function(e){return 0===e?0:1===e?1:(e/=.5)<1?.5*Math.pow(2,10*(e-1)):.5*(-Math.pow(2,-10*--e)+2)},easeInCirc:function(e){return-(Math.sqrt(1-e*e)-1)},easeOutCirc:function(e){return Math.sqrt(1-Math.pow(e-1,2))},easeInOutCirc:function(e){return(e/=.5)<1?-.5*(Math.sqrt(1-e*e)-1):.5*(Math.sqrt(1-(e-=2)*e)+1)},easeOutBounce:function(e){return e<1/2.75?7.5625*e*e:e<2/2.75?7.5625*(e-=1.5/2.75)*e+.75:e<2.5/2.75?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375},easeInBack:function(e){var t=1.70158;return e*e*((t+1)*e-t)},easeOutBack:function(e){var t=1.70158;return(e-=1)*e*((t+1)*e+t)+1},easeInOutBack:function(e){var t=1.70158;return(e/=.5)<1?.5*(e*e*(((t*=1.525)+1)*e-t)):.5*((e-=2)*e*(((t*=1.525)+1)*e+t)+2)},elastic:function(e){return-1*Math.pow(4,-8*e)*Math.sin((6*e-1)*(2*Math.PI)/2)+1},swingFromTo:function(e){var t=1.70158;return(e/=.5)<1?.5*(e*e*(((t*=1.525)+1)*e-t)):.5*((e-=2)*e*(((t*=1.525)+1)*e+t)+2)},swingFrom:function(e){var t=1.70158;return e*e*((t+1)*e-t)},swingTo:function(e){var t=1.70158;return(e-=1)*e*((t+1)*e+t)+1},bounce:function(e){return e<1/2.75?7.5625*e*e:e<2/2.75?7.5625*(e-=1.5/2.75)*e+.75:e<2.5/2.75?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375},bouncePast:function(e){return e<1/2.75?7.5625*e*e:e<2/2.75?2-(7.5625*(e-=1.5/2.75)*e+.75):e<2.5/2.75?2-(7.5625*(e-=2.25/2.75)*e+.9375):2-(7.5625*(e-=2.625/2.75)*e+.984375)},easeFromTo:function(e){return(e/=.5)<1?.5*Math.pow(e,4):-.5*((e-=2)*Math.pow(e,3)-2)},easeFrom:function(e){return Math.pow(e,4)},easeTo:function(e){return Math.pow(e,.25)}})}(),function(){function e(e,t,n,i,o,r){function a(e){return((h*e+p)*e+m)*e}function s(e){return((v*e+g)*e+E)*e}function l(e){return(3*h*e+2*p)*e+m}function c(e){return 1/(200*e)}function d(e,t){return s(f(e,t))}function u(e){return e>=0?e:0-e}function f(e,t){var n,i,o,r,s,c;for(o=e,c=0;c<8;c++){if(r=a(o)-e,u(r)<t)return o;if(s=l(o),u(s)<1e-6)break;o-=r/s}if(n=0,i=1,o=e,o<n)return n;if(o>i)return i;for(;n<i;){if(r=a(o),u(r-e)<t)return o;e>r?n=o:i=o,o=.5*(i-n)+n}return o}var h=0,p=0,m=0,v=0,g=0,E=0;return m=3*t,p=3*(i-t)-m,h=1-m-p,E=3*n,g=3*(o-n)-E,v=1-E-g,d(e,c(r))}function t(t,n,i,o){return function(r){return e(r,t,n,i,o,1)}}n.setBezierFunction=function(e,i,o,r,a){var s=t(i,o,r,a);return s.displayName=e,s.x1=i,s.y1=o,s.x2=r,s.y2=a,n.prototype.formula[e]=s},n.unsetBezierFunction=function(e){delete n.prototype.formula[e]}}(),function(){function e(e,t,i,o,r,a){return n.tweenProps(o,t,e,i,1,a,r)}var t=new n;t._filterArgs=[],n.interpolate=function(i,o,r,a,s){var l=n.shallowCopy({},i),c=s||0,d=n.composeEasingObject(i,a||"linear");t.set({});var u=t._filterArgs;u.length=0,u[0]=l,u[1]=i,u[2]=o,u[3]=d,n.applyFilter(t,"tweenCreated"),n.applyFilter(t,"beforeTween");var f=e(i,l,o,r,d,c);return n.applyFilter(t,"afterTween"),f}}(),function(e){function t(e,t){var n,i=[],o=e.length;for(n=0;n<o;n++)i.push("_"+t+"_"+n);return i}function n(e){var t=e.match(_);return t?(1===t.length||e.charAt(0).match(b))&&t.unshift(""):t=["",""],t.join(T)}function i(t){e.each(t,function(e){var n=t[e];"string"==typeof n&&n.match(S)&&(t[e]=o(n))})}function o(e){return l(S,e,r)}function r(e){var t=a(e);return"rgb("+t[0]+","+t[1]+","+t[2]+")"}function a(e){return e=e.replace(/#/,""),3===e.length&&(e=e.split(""),e=e[0]+e[0]+e[1]+e[1]+e[2]+e[2]),P[0]=s(e.substr(0,2)),P[1]=s(e.substr(2,2)),P[2]=s(e.substr(4,2)),P}function s(e){return parseInt(e,16)}function l(e,t,n){var i=t.match(e),o=t.replace(e,T);if(i)for(var r,a=i.length,s=0;s<a;s++)r=i.shift(),o=o.replace(T,n(r));return o}function c(e){return l(M,e,d)}function d(e){for(var t=e.match(w),n=t.length,i=e.match(x)[0],o=0;o<n;o++)i+=parseInt(t[o],10)+",";return i=i.slice(0,-1)+")"}function u(i){var o={};return e.each(i,function(e){var r=i[e];if("string"==typeof r){var a=g(r);o[e]={formatString:n(r),chunkNames:t(a,e)}}}),o}function f(t,n){e.each(n,function(e){for(var i=t[e],o=g(i),r=o.length,a=0;a<r;a++)t[n[e].chunkNames[a]]=+o[a];delete t[e]})}function h(t,n){e.each(n,function(e){var i=t[e],o=p(t,n[e].chunkNames),r=m(o,n[e].chunkNames);i=v(n[e].formatString,r),t[e]=c(i)})}function p(e,t){for(var n,i={},o=t.length,r=0;r<o;r++)n=t[r],i[n]=e[n],delete e[n];return i}function m(e,t){L.length=0;for(var n=t.length,i=0;i<n;i++)L.push(e[t[i]]);return L}function v(e,t){for(var n=e,i=t.length,o=0;o<i;o++)n=n.replace(T,+t[o].toFixed(4));return n}function g(e){return e.match(w)}function E(t,n){e.each(n,function(e){var i,o=n[e],r=o.chunkNames,a=r.length,s=t[e];if("string"==typeof s){var l=s.split(" "),c=l[l.length-1];for(i=0;i<a;i++)t[r[i]]=l[i]||c}else for(i=0;i<a;i++)t[r[i]]=s;delete t[e]})}function y(t,n){e.each(n,function(e){var i=n[e],o=i.chunkNames,r=o.length,a=t[o[0]],s=typeof a;if("string"===s){for(var l="",c=0;c<r;c++)l+=" "+t[o[c]],delete t[o[c]];t[e]=l.substr(1)}else t[e]=a})}var b=/(\d|\-|\.)/,_=/([^\-0-9\.]+)/g,w=/[0-9.\-]+/g,M=new RegExp("rgb\\("+w.source+/,\s*/.source+w.source+/,\s*/.source+w.source+"\\)","g"),x=/^.*\(/,S=/#([0-9]|[a-f]){3,6}/gi,T="VAL",P=[],L=[];e.prototype.filter.token={tweenCreated:function(e,t,n,o){i(e),i(t),i(n),this._tokenData=u(e)},beforeTween:function(e,t,n,i){E(i,this._tokenData),f(e,this._tokenData),f(t,this._tokenData),f(n,this._tokenData)},afterTween:function(e,t,n,i){h(e,this._tokenData),h(t,this._tokenData),h(n,this._tokenData),y(i,this._tokenData)}}}(n)}).call(null)},function(e,t){function n(e,t,i){e=e||{},t=t||{},i=i||!1;for(var o in t)if(t.hasOwnProperty(o)){var r=e[o],a=t[o];i&&d(r)&&d(a)?e[o]=n(r,a,i):e[o]=a}return e}function i(e,t){var n=e;for(var i in t)if(t.hasOwnProperty(i)){
var o=t[i],r="\\{"+i+"\\}",a=new RegExp(r,"g");n=n.replace(a,o)}return n}function o(e,t,n){for(var i=e.style,o=0;o<p.length;++o){var r=p[o];i[r+a(t)]=n}i[t]=n}function r(e,t){u(t,function(t,n){null!==t&&void 0!==t&&(d(t)&&t.prefix===!0?o(e,n,t.value):e.style[n]=t)})}function a(e){return e.charAt(0).toUpperCase()+e.slice(1)}function s(e){return"string"==typeof e||e instanceof String}function l(e){return"function"==typeof e}function c(e){return"[object Array]"===Object.prototype.toString.call(e)}function d(e){if(c(e))return!1;var t=typeof e;return"object"===t&&!!e}function u(e,t){for(var n in e)if(e.hasOwnProperty(n)){var i=e[n];t(i,n)}}function f(e,t){return Math.abs(e-t)<m}function h(e){for(;e.firstChild;)e.removeChild(e.firstChild)}var p="Webkit Moz O ms".split(" "),m=.001;e.exports={extend:n,render:i,setStyle:o,setStyles:r,capitalize:a,isString:s,isFunction:l,isObject:d,forEachObject:u,floatEquals:f,removeChildren:h}},function(e,t,n){var i=n(10),o=n(13),r=function(e,t){this._pathTemplate="M 50,50 m 0,-{radius} a {radius},{radius} 0 1 1 0,{2radius} a {radius},{radius} 0 1 1 0,-{2radius}",this.containerAspectRatio=1,i.apply(this,arguments)};r.prototype=new i,r.prototype.constructor=r,r.prototype._pathString=function(e){var t=e.strokeWidth;e.trailWidth&&e.trailWidth>e.strokeWidth&&(t=e.trailWidth);var n=50-t/2;return o.render(this._pathTemplate,{radius:n,"2radius":2*n})},r.prototype._trailString=function(e){return this._pathString(e)},e.exports=r},function(e,t,n){var i=n(10),o=n(14),r=n(13),a=function(e,t){this._pathTemplate="M 50,50 m -{radius},0 a {radius},{radius} 0 1 1 {2radius},0",this.containerAspectRatio=2,i.apply(this,arguments)};a.prototype=new i,a.prototype.constructor=a,a.prototype._initializeSvg=function(e,t){e.setAttribute("viewBox","0 0 100 50")},a.prototype._initializeTextContainer=function(e,t,n){e.text.style&&(n.style.top="auto",n.style.bottom="0",e.text.alignToBottom?r.setStyle(n,"transform","translate(-50%, 0)"):r.setStyle(n,"transform","translate(-50%, 50%)"))},a.prototype._pathString=o.prototype._pathString,a.prototype._trailString=o.prototype._trailString,e.exports=a},function(e,t){THREE.DDSLoader=function(){this._parser=THREE.DDSLoader.parse},THREE.DDSLoader.prototype=Object.create(THREE.CompressedTextureLoader.prototype),THREE.DDSLoader.prototype.constructor=THREE.DDSLoader,THREE.DDSLoader.parse=function(e,t){function n(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}function i(e){return String.fromCharCode(255&e,e>>8&255,e>>16&255,e>>24&255)}function o(e,t,n,i){for(var o=n*i*4,r=new Uint8Array(e,t,o),a=new Uint8Array(o),s=0,l=0,c=0;c<i;c++)for(var d=0;d<n;d++){var u=r[l];l++;var f=r[l];l++;var h=r[l];l++;var p=r[l];l++,a[s]=h,s++,a[s]=f,s++,a[s]=u,s++,a[s]=p,s++}return a}var r={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},a=542327876,s=131072,l=512,c=1024,d=2048,u=4096,f=8192,h=16384,p=32768,m=4,v=n("DXT1"),g=n("DXT3"),E=n("DXT5"),y=n("ETC1"),b=31,_=0,w=1,M=2,x=3,S=4,T=7,P=20,L=21,R=22,C=23,k=24,D=25,O=26,I=28,A=new Int32Array(e,0,b);if(A[_]!==a)return console.error("THREE.DDSLoader.parse: Invalid magic number in DDS header."),r;if(!A[P]&m)return console.error("THREE.DDSLoader.parse: Unsupported format, must contain a FourCC code."),r;var N,H=A[L],U=!1;switch(H){case v:N=8,r.format=THREE.RGB_S3TC_DXT1_Format;break;case g:N=16,r.format=THREE.RGBA_S3TC_DXT3_Format;break;case E:N=16,r.format=THREE.RGBA_S3TC_DXT5_Format;break;case y:N=8,r.format=THREE.RGB_ETC1_Format;break;default:if(!(32===A[R]&&16711680&A[C]&&65280&A[k]&&255&A[D]&&4278190080&A[O]))return console.error("THREE.DDSLoader.parse: Unsupported FourCC code ",i(H)),r;U=!0,N=64,r.format=THREE.RGBAFormat}r.mipmapCount=1,A[M]&s&&t!==!1&&(r.mipmapCount=Math.max(1,A[T]));var j=A[I];if(r.isCubemap=!!(j&l),r.isCubemap&&(!(j&c)||!(j&d)||!(j&u)||!(j&f)||!(j&h)||!(j&p)))return console.error("THREE.DDSLoader.parse: Incomplete cubemap faces"),r;r.width=A[S],r.height=A[x];for(var V=A[w]+4,z=r.isCubemap?6:1,F=0;F<z;F++)for(var B=r.width,G=r.height,W=0;W<r.mipmapCount;W++){if(U)var Y=o(e,V,B,G),X=Y.length;else var X=Math.max(4,B)/4*Math.max(4,G)/4*N,Y=new Uint8Array(e,V,X);var q={data:Y,width:B,height:G};r.mipmaps.push(q),V+=X,B=Math.max(B>>1,1),G=Math.max(G>>1,1)}return r}},function(e,t){THREE.PVRLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager,this._parser=THREE.PVRLoader.parse},THREE.PVRLoader.prototype=Object.create(THREE.CompressedTextureLoader.prototype),THREE.PVRLoader.prototype.constructor=THREE.PVRLoader,THREE.PVRLoader.parse=function(e,t){var n=13,i=new Uint32Array(e,0,n),o={buffer:e,header:i,loadMipmaps:t};if(55727696===i[0])return THREE.PVRLoader._parseV3(o);if(559044176===i[11])return THREE.PVRLoader._parseV2(o);throw new Error("[THREE.PVRLoader] Unknown PVR format")},THREE.PVRLoader._parseV3=function(e){var t,n,i=e.header,o=i[12],r=i[2],a=i[6],s=i[7],l=(i[9],i[10]),c=i[11];switch(r){case 0:t=2,n=THREE.RGB_PVRTC_2BPPV1_Format;break;case 1:t=2,n=THREE.RGBA_PVRTC_2BPPV1_Format;break;case 2:t=4,n=THREE.RGB_PVRTC_4BPPV1_Format;break;case 3:t=4,n=THREE.RGBA_PVRTC_4BPPV1_Format;break;default:throw new Error("pvrtc - unsupported PVR format "+r)}return e.dataPtr=52+o,e.bpp=t,e.format=n,e.width=s,e.height=a,e.numSurfaces=l,e.numMipmaps=c,e.isCubemap=6===l,THREE.PVRLoader._extract(e)},THREE.PVRLoader._parseV2=function(e){var t,n,i=e.header,o=i[0],r=i[1],a=i[2],s=i[3],l=i[4],t=(i[5],i[6]),c=(i[7],i[8],i[9],i[10]),d=(i[11],i[12]),u=255,f=24,h=25,p=l&u,m=c>0;if(p===h)n=m?THREE.RGBA_PVRTC_4BPPV1_Format:THREE.RGB_PVRTC_4BPPV1_Format,t=4;else{if(p!==f)throw new Error("pvrtc - unknown format "+p);n=m?THREE.RGBA_PVRTC_2BPPV1_Format:THREE.RGB_PVRTC_2BPPV1_Format,t=2}return e.dataPtr=o,e.bpp=t,e.format=n,e.width=a,e.height=r,e.numSurfaces=d,e.numMipmaps=s+1,e.isCubemap=6===d,THREE.PVRLoader._extract(e)},THREE.PVRLoader._extract=function(e){var t={mipmaps:[],width:e.width,height:e.height,format:e.format,mipmapCount:e.numMipmaps,isCubemap:e.isCubemap},n=e.buffer,i=e.dataPtr,o=e.bpp,r=e.numSurfaces,a=0,s=0,l=0,c=0,d=0,u=0;2===o?(l=8,c=4):(l=4,c=4),s=l*c*o/8,t.mipmaps.length=e.numMipmaps*r;for(var f=0;f<e.numMipmaps;){var h=e.width>>f,p=e.height>>f;d=h/l,u=p/c,d<2&&(d=2),u<2&&(u=2),a=d*u*s;for(var m=0;m<r;m++){var v=new Uint8Array(n,i,a),g={data:v,width:h,height:p};t.mipmaps[m*e.numMipmaps+f]=g,i+=a}f++}return t}},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n={assets:[{name:"spaceship_interior",type:"json",path:"assets/spaceship_with_interior.json"},{name:"door_diffuse",type:"texture",path:"assets/textures/door_diffuse.jpg"},{name:"window_diffuse",type:"texture",path:"assets/textures/window_diffuse.jpg"},{name:"spaceship_outer_diffuse",type:"texture",path:"assets/textures/spaceship_outer_diffuse_2k.jpg"},{name:"outer_pipe_diffuse",type:"texture",path:"assets/textures/outer_pipe_diffuse.jpg"},{name:"space_suit_diffuse",type:"texture",path:"assets/textures/suit_diffuse_1k.jpg"},{name:"kit-panel_diffuse",type:"texture",path:"assets/textures/kit-panel_diffuse.jpg"},{name:"kit-panel_normal",type:"texture",path:"assets/textures/kit-panel_normal.jpg"},{name:"floor_tile_diffuse",type:"texture",path:"assets/textures/floor_tile_diffuse.jpg"},{name:"floor_tile_normal",type:"texture",path:"assets/textures/floor_tile_normal.jpg"},{name:"wall_tile_diffuse",type:"texture",path:"assets/textures/wall_tile_diffuse.jpg"},{name:"wall_tile_normal",type:"texture",path:"assets/textures/wall_tile_normal.jpg"}],model:{children:[{type:"asset/json",name:"spaceship_interior",properties:{name:"Spaceship Interior"}},{object:{type:"AmbientLight",args:11184810},properties:{name:"ambientLight"}},{object:{type:"DirectionalLight",args:16777215},properties:{name:"directLight",position:{x:-30,y:20,z:10}}},{object:{type:"DirectionalLight",args:8947848},properties:{name:"directLight2",position:{x:30,y:-30,z:-5}}}]}};t.default=n},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n={floor:{map:"floor_tile_diffuse",normalMap:"floor_tile_normal",color:16777215,metalness:.3,roughness:.8,repeat:[30,30]},wall:{map:"wall_tile_diffuse",normalMap:"wall_tile_normal",color:16777215,metalness:.2,roughness:.8,repeat:[12.8,12.8]},roof:{map:"floor_tile_diffuse",normalMap:"floor_tile_normal",color:16777215,metalness:.3,roughness:.8,repeat:[30,30]},door:{map:"door_diffuse",color:16777215,metalness:.2,roughness:.8},door_instanced:{map:"door_diffuse",color:16777215,metalness:.2,roughness:.8},space_suit:{map:"space_suit_diffuse",color:16777215},repair_kit:{map:"kit-panel_diffuse",normalMap:"kit-panel_normal",color:16777215,metalness:.2,roughness:.8},control_panel:{map:"kit-panel_diffuse",color:16777215},outer_pipe:{map:"outer_pipe_diffuse",color:16777215},spaceship_outer:{map:"spaceship_outer_diffuse",color:11206655,metalness:.2,roughness:.8},window:{map:"window_diffuse",color:16777215,metalness:.2,roughness:.8},window_glass_inner:{color:6706517,metalness:.6,roughness:.5,opacity:.5},window_glass_outer:{color:2236970,metalness:.7,roughness:.5}};t.default=n},function(e,t,n){"use strict";function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),r=n(21),a=n(22),s=n(23),l=function(){function e(t){i(this,e),this.materialsDescription=t||{},this.materialsCache=[]}return o(e,[{key:"rewriteSingleMaterials",value:function(e,t){var n=this;this.textures=t,e.traverse(function(e){if(e instanceof THREE.Mesh&&!e.name.includes("_instanced"))if(e.material instanceof THREE.MultiMaterial)for(var t=0;t<e.material.materials.length;t++)e.material.materials[t]=n.rewriteSingleMaterial(e.material.materials[t],r,a);else e.material=n.rewriteSingleMaterial(e.material,r,a)})}},{key:"rewriteInstancedMaterial",value:function(e){var t=null;if(e instanceof THREE.MultiMaterial){for(var n=0;n<e.materials.length;n++)e.materials[n]=this.rewriteSingleMaterial(e.materials[n],s,a,!0);t=e}else t=this.rewriteSingleMaterial(e,s,a,!0);return t}},{key:"rewriteCustomMaterial",value:function(e,t,n){var i=null;if(e instanceof THREE.MultiMaterial){for(var o=0;o<e.materials.length;o++)e.materials[o]=this.rewriteSingleMaterial(e.materials[o],t,n,!0);i=e}else i=this.rewriteSingleMaterial(e,t,n,!0);return i}},{key:"rewriteSingleMaterial",value:function(e,t,n,i,o){for(var r=e.name+(i&&!e.name.includes("_instanced")?"_instanced":""),a=0;a<this.materialsCache.length;a++)if(!o&&r===this.materialsCache[a].name)return this.materialsCache[a];var s=THREE.UniformsUtils.clone(THREE.ShaderLib.standard.uniforms);s.map.value=e.map,s.lightMap.value=e.lightMap,s.bumpMap.value=e.bumpMap instanceof THREE.Texture?e.bumpMap:null,s.normalMap.value=e.normalMap instanceof THREE.Texture?e.normalMap:null,s.diffuse.value=e.color?e.color:new THREE.Color(16777215),s.roughnessMap.value=null,s.roughness.value=e.roughness||.6,s.metalness.value=e.metalness||.1,s.ssaoMap={type:"t",value:null},s.ssaoMapIntensity={type:"f",value:1.01},s.screenResolution={type:"v2",value:new THREE.Vector2(window.innerWidth,window.innerHeight)};var l=this.materialsDescription[r];l&&this._writeUniformsFromMaterialDescription(s,l);var c=this._getMaterialDefines(s),d=c+t,u=c+n,f=new THREE.RawShaderMaterial({uniforms:s,lights:!0,transparent:s.opacity.value<1||e.transparent,side:e.side,vertexShader:d,fragmentShader:u});return f.name=r,this.materialsCache.push(f),f}},{key:"_writeUniformsFromMaterialDescription",value:function(e,t){e.map.value=this.textures[t.map]||e.map.value,e.normalMap.value=this.textures[t.normalMap]||e.normalMap.value,e.bumpMap.value=this.textures[t.bumpMap]||e.bumpMap.value,e.roughnessMap.value=this.textures[t.roughnessMap]||e.roughnessMap.value,e.diffuse.value=t.color?new THREE.Color(t.color):e.diffuse.value,e.roughness.value=t.roughness||e.roughness.value,e.metalness.value=t.metalness||e.metalness.value,e.opacity.value=t.opacity||1,t.repeat&&(e.offsetRepeat.value.set(0,0,t.repeat[0],t.repeat[1]),e.map.value.wrapS=e.map.value.wrapT=THREE.RepeatWrapping,e.map.value.repeat.set(t.repeat[0],t.repeat[1]),e.normalMap&&e.normalMap.value&&(e.normalMap.value.wrapS=e.normalMap.value.wrapT=THREE.RepeatWrapping,e.normalMap.value.repeat.set(t.repeat[0],t.repeat[1])),e.bumpMap&&e.bumpMap.value&&(e.bumpMap.value.wrapS=e.bumpMap.value.wrapT=THREE.RepeatWrapping,e.bumpMap.value.repeat.set(t.repeat[0],t.repeat[1])),e.roughnessMap&&e.roughnessMap.value&&(e.roughnessMap.value.wrapS=e.roughnessMap.value.wrapT=THREE.RepeatWrapping,e.roughnessMap.value.repeat.set(t.repeat[0],t.repeat[1]))),t.offset&&(e.offsetRepeat.value.x=t.offset[0],e.offsetRepeat.value.y=t.offset[1])}},{key:"_getMaterialDefines",value:function(e){var t="";return e.map.value&&(t+="#define USE_MAP 1\n"),e.lightMap.value&&(t+="#define USE_LIGHTMAP 1\n"),e.bumpMap.value&&(t+="#define USE_BUMPMAP 1\n"),e.normalMap.value&&(t+="#define USE_NORMALMAP 1\n"),e.roughnessMap.value&&(t+="#define USE_ROUGHNESSMAP 1\n"),t}}]),e}();t.default=l},function(e,t){e.exports="#define SHADER_NAME ShaderMaterial\n#define VERTEX_TEXTURES\n#define GAMMA_FACTOR 2\n#define MAX_BONES 251\nuniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\n#ifdef USE_COLOR\n\tattribute vec3 color;\n#endif\n\n#ifdef IS_FOLIAGE\nvarying float vDepth;\n#endif\n#ifdef USE_MORPHTARGETS\n\tattribute vec3 morphTarget0;\n\tattribute vec3 morphTarget1;\n\tattribute vec3 morphTarget2;\n\tattribute vec3 morphTarget3;\n\t#ifdef USE_MORPHNORMALS\n\t\tattribute vec3 morphNormal0;\n\t\tattribute vec3 morphNormal1;\n\t\tattribute vec3 morphNormal2;\n\t\tattribute vec3 morphNormal3;\n\t#else\n\t\tattribute vec3 morphTarget4;\n\t\tattribute vec3 morphTarget5;\n\t\tattribute vec3 morphTarget6;\n\t\tattribute vec3 morphTarget7;\n\t#endif\n#endif\n#ifdef USE_SKINNING\n\tattribute vec4 skinIndex;\n\tattribute vec4 skinWeight;\n#endif\n\n#define STANDARD\n\n#define GAMMA_FACTOR 2\n\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#define PI 3.14159\n#define PI2 6.28318\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\n\n#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n#endif\n\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif\n\n#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif\n\n#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG ) && ! defined( STANDARD )\n\tvarying vec3 vReflect;\n\tuniform float refractionRatio;\n#endif\n\n#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif\n#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif\n#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureWidth;\n\t\tuniform int boneTextureHeight;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif\n\n#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHTS > 0\n\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHTS > 0\n\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\n\t#endif\n\n\t#if NUM_POINT_LIGHTS > 0\n\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\n\t#endif\n\n#endif\n\n#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif\n#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n\tuniform float logDepthBufFC;\n#endif\n\nvoid main() {\n\t#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif\n\t#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = uv2;\n#endif\n\t#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif\n\nvec3 objectNormal = vec3( normal );\n\n#ifdef USE_MORPHNORMALS\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif\n\n#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif\n#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n#endif\n\n#ifdef FLIP_SIDED\n\tobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;\n\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\nvec3 transformed = vec3( position );\n\n#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif\n\n#ifdef USE_MORPHTARGETS\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif\n\n#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\tskinned  = bindMatrixInverse * skinned;\n#endif\n\n#ifdef USE_SKINNING\n\tvec4 mvPosition = modelViewMatrix * skinned;\n#else\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;\n\n#ifdef USE_LOGDEPTHBUF\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t#else\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\t#endif\n#endif\n\n\tvViewPosition = - mvPosition.xyz;\n#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( STANDARD ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\t#ifdef USE_SKINNING\n\t\tvec4 worldPosition = modelMatrix * skinned;\n\t#else\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n\t#endif\n#endif\n\n#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG ) && ! defined( STANDARD )\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t#ifdef ENVMAP_MODE_REFLECTION\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t#else\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t#endif\n#endif\n\n#ifdef USE_SHADOWMAP\n    #if NUM_DIR_LIGHTS > 0\n    \tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n    \t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n    \t}\n\t#endif\n\n\t#if NUM_SPOT_LIGHTS > 0\n    \tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n    \t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n    \t}\n\t#endif\n\n\t#if NUM_POINT_LIGHTS > 0\n    \tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n    \t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n    \t}\n\t#endif\n#endif\n}\n"},function(e,t){e.exports="#extension GL_OES_standard_derivatives : enable\n\nprecision highp float;\n\n#define SHADER_NAME ShaderMaterial\n#define GAMMA_FACTOR 2\nuniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n#define TONE_MAPPING\n#define saturate(a) clamp( a, 0.0, 1.0 )\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n  return toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  return saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  color = max( vec3( 0.0 ), color - 0.004 );\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\n\nvec3 toneMapping( vec3 color ) { return LinearToneMapping( color ); }\n\nvec4 LinearToLinear( in vec4 value ) {\n  return value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n  float maxComponent = max( max( value.r, value.g ), value.b );\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n  float maxRGB = max( value.x, max( value.g, value.b ) );\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n  M            = ceil( M * 255.0 ) / 255.0;\n  return vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n    float maxRGB = max( value.x, max( value.g, value.b ) );\n    float D      = max( maxRange / maxRGB, 1.0 );\n    D            = min( floor( D ) / 255.0, 1.0 );\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n  vec4 vResult;\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n  vResult.w = fract(Le);\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n  return vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n  float Le = value.z * 255.0 + value.w;\n  vec3 Xp_Y_XYZp;\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n  return vec4( max(vRGB, 0.0), 1.0 );\n}\n\nvec4 mapTexelToLinear( vec4 value ) { return LinearToLinear( value ); }\nvec4 envMapTexelToLinear( vec4 value ) { return LinearToLinear( value ); }\nvec4 emissiveMapTexelToLinear( vec4 value ) { return LinearToLinear( value ); }\nvec4 linearToOutputTexel( vec4 value ) { return LinearToLinear( value ); }\n\n#define STANDARD\n\n#define GAMMA_FACTOR 2\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\nuniform float envMapIntensity;\nvarying vec3 vViewPosition;\n#ifdef IS_FOLIAGE\nvarying float vDepth;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#define PI 3.14159\n#define PI2 6.28318\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\n\n#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif\n\n#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n#endif\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif\n\n#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif\n#if defined( USE_SSAOMAP )\n    uniform highp sampler2D ssaoMap;\n    uniform float ssaoMapIntensity;\n    uniform vec2 screenResolution;\n#endif\n#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif\n\n#if defined( USE_ENVMAP ) || defined( STANDARD )\n\tuniform float reflectivity;\n\tuniform float envMapIntenstiy;\n#endif\n#ifdef USE_ENVMAP\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( STANDARD )\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif\n\n#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif\nbool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\n\treturn any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t\tif( decayExponent > 0.0 ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t\treturn distanceFalloff * maxDistanceCutoffFactor;\n#else\n\t\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n#endif\n\t\t}\n\t\treturn 1.0;\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_Smith( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\treturn specularColor * AB.x + AB.y;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n\n#ifdef ENVMAP_TYPE_CUBE_UV\nconst float cubeUV_textureSize = 1024.0;\nint getFaceFromDirection(vec3 direction) {\n    vec3 absDirection = abs(direction);\n    int face = -1;\n    if( absDirection.x > absDirection.z ) {\n        if(absDirection.x > absDirection.y )\n            face = direction.x > 0.0 ? 0 : 3;\n        else\n            face = direction.y > 0.0 ? 1 : 4;\n    }\n    else {\n        if(absDirection.z > absDirection.y )\n            face = direction.z > 0.0 ? 2 : 5;\n        else\n            face = direction.y > 0.0 ? 1 : 4;\n    }\n    return face;\n}\nconst float cubeUV_maxLods1 = log2(cubeUV_textureSize*0.25) - 1.0;\nconst float cubeUV_rangeClamp = exp2((6.0 - 1.0) * 2.0);\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n    float scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n    float dxRoughness = dFdx(roughness);\n    float dyRoughness = dFdy(roughness);\n    vec3 dx = dFdx( vec * scale * dxRoughness );\n    vec3 dy = dFdy( vec * scale * dyRoughness );\n    float d = max( dot( dx, dx ), dot( dy, dy ) );\n    d = clamp(d, 1.0, cubeUV_rangeClamp);\n    float mipLevel = 0.5 * log2(d);\n    return vec2(floor(mipLevel), fract(mipLevel));\n}\nconst float cubeUV_maxLods2 = log2(cubeUV_textureSize*0.25) - 2.0;\nconst float cubeUV_rcpTextureSize = 1.0 / cubeUV_textureSize;\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n    mipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n    float a = 16.0 * cubeUV_rcpTextureSize;\n    vec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n    vec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n    float powScale = exp2_packed.x * exp2_packed.y;\n    float scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n    float mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n    bool bRes = mipLevel == 0.0;\n    scale =  bRes && (scale < a) ? a : scale;\n    vec3 r;\n    vec2 offset;\n    int face = getFaceFromDirection(direction);\n    float rcpPowScale = 1.0 / powScale;\n    if( face == 0) {\n        r = vec3(direction.x, -direction.z, direction.y);\n        offset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n        offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n    }\n    else if( face == 1) {\n        r = vec3(direction.y, direction.x, direction.z);\n        offset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n        offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n    }\n    else if( face == 2) {\n        r = vec3(direction.z, direction.x, direction.y);\n        offset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n        offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n    }\n    else if( face == 3) {\n        r = vec3(direction.x, direction.z, direction.y);\n        offset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n        offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n    }\n    else if( face == 4) {\n        r = vec3(direction.y, direction.x, -direction.z);\n        offset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n        offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n    }\n    else {\n        r = vec3(direction.z, -direction.x, direction.y);\n        offset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n        offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n    }\n    r = normalize(r);\n    float texelOffset = 0.5 * cubeUV_rcpTextureSize;\n    vec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n    vec2 base = offset + vec2( texelOffset );\n    return base + s * ( scale - 2.0 * texelOffset );\n}\nconst float cubeUV_maxLods3 = log2(cubeUV_textureSize*0.25) - 3.0;\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\n    float roughnessVal = roughness* cubeUV_maxLods3;\n    float r1 = floor(roughnessVal);\n    float r2 = r1 + 1.0;\n    float t = fract(roughnessVal);\n    vec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n    float s = mipInfo.y;\n    float level0 = mipInfo.x;\n    float level1 = level0 + 1.0;\n    level1 = level1 > 5.0 ? 5.0 : level1;\n    level0 += min( floor( s + 0.5 ), 5.0 );\n    vec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n    vec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n    vec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n    vec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n    vec4 result = mix(color10, color20, t);\n    return vec4(result.rgb, 1.0);\n}\n#endif\n\nuniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\n\t}\n\n#endif\n\n\n#if NUM_POINT_LIGHTS > 0\n\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\n\t// directLight is an out parameter as having it as a return value caused compiler errors on some devices\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\n\t\tfloat lightDistance = length( lVector );\n\n\t\tif ( testLightInRange( lightDistance, pointLight.distance ) ) {\n\n\t\t\tdirectLight.color = pointLight.color;\n\t\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\n\t\t\tdirectLight.visible = true;\n\n\t\t} else {\n\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\n\t\t}\n\n\t}\n\n#endif\n\n\n#if NUM_SPOT_LIGHTS > 0\n\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\n\t// directLight is an out parameter as having it as a return value caused compiler errors on some devices\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\n\t\tif ( all( bvec2( angleCos > spotLight.coneCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\n\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\n\t\t\tdirectLight.visible = true;\n\n\t\t} else {\n\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\n\t\t}\n\n\t}\n\n#endif\n\n\n#if NUM_HEMI_LIGHTS > 0\n\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\t\tirradiance *= PI;\n\n\t\t#endif\n\n\t\treturn irradiance;\n\n\t}\n\n#endif\n#if defined( USE_ENVMAP ) && defined( STANDARD )\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#else\n\t\t\tfloat flipNormal = 1.0;\n\t\t#endif\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\t\t#endif\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#else\n\t\t\tfloat flipNormal = 1.0;\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n\t\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t#endif\n\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif\n\nstruct StandardMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n};\nvoid RE_Direct_Standard( const in IncidentLight directLight, const in GeometricContext geometry, const in StandardMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n}\nvoid RE_IndirectDiffuse_Standard( const in vec3 irradiance, const in GeometricContext geometry, const in StandardMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Standard( const in vec3 radiance, const in GeometricContext geometry, const in StandardMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectSpecular += radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Standard\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Standard\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Standard\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}\n\n#ifdef USE_SHADOWMAP\n    #if NUM_DIR_LIGHTS > 0\n        uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n        varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n    #endif\n\n    #if NUM_SPOT_LIGHTS > 0\n        uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n        varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n    #endif\n\n    #if NUM_POINT_LIGHTS > 0\n        uniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n        varying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n    #endif\n\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n\t\treturn dot( rgba_depth, bit_shift );\n\t}\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackDepth( texture2D( depths, uv ) ) );\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\treturn (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn 1.0;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif\n\n#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif\n\n#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif\n\n#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif\n#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif\n#ifdef USE_LOGDEPTHBUF\n\tuniform float logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n#endif\n\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n \tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\n\tvec3 totalEmissiveRadiance = emissive;\n\t#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n#endif\n\t#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif\n\t#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif\n\t#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif\n\n\t#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif\n\n\tfloat specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif\n\tfloat roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.r;\n#endif\n\n\tfloat metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.r;\n#endif\n\n\t#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\t#endif\n#endif\n#ifdef USE_NORMALMAP\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n\n\t#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif\n\nStandardMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\nmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\n\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tPointLight pointLight;\n\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tpointLight = pointLights[ i ];\n\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\n#endif\n\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tSpotLight spotLight;\n\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tspotLight = spotLights[ i ];\n\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\n#endif\n\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tDirectionalLight directionalLight;\n\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tdirectionalLight = directionalLights[ i ];\n\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef USE_LIGHTMAP\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n    #if ( NUM_HEMI_LIGHTS > 0 )\n    \t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n    \t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n    \t\t}\n    \t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t \tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\n\t#endif\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\n\tRE_IndirectSpecular( radiance, geometry, material, reflectedLight );\n#endif\n\n\t#if defined( USE_AOMAP ) || defined ( USE_SSAOMAP )\n    #ifdef USE_AOMAP\n\t   float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n       reflectedLight.indirectDiffuse *= ambientOcclusion;\n    #endif\n    #ifdef USE_SSAOMAP\n       vec2 screenPos = gl_FragCoord.xy / screenResolution;\n\t   float ambientOcclusion = texture2D( ssaoMap, screenPos ).r * ssaoMapIntensity;\n       reflectedLight.indirectDiffuse *= ambientOcclusion;\n    #endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif\n\n\t#if defined( TONE_MAPPING )\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif\n\n\t  gl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t#ifdef USE_FOG\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\t#else\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\t#endif\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n\n#endif\n\n// #ifdef USE_MAP\n//     gl_FragColor = texture2D( map, vUv );\n//     #endif\n// gl_FragColor.rgb = texture2D( ssaoMap, gl_FragCoord.xy / screenResolution ).rgb;\n}\n";
},function(e,t){e.exports="#define SHADER_NAME ShaderMaterial\n#define VERTEX_TEXTURES\n#define GAMMA_FACTOR 2\n#define MAX_BONES 251\n#define LEAF_AMPLITUDE 80.\n#define LEAF_PERIOD 1.\n#define TREE_AMPLITUDE 0.015\n#define TREE_PERIOD 0.8\n// uniform mat4 modelMatrix;\n// uniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nuniform float time;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\n\nattribute vec4 transform1;\nattribute vec4 transform2;\nattribute vec4 transform3;\nvec4 transform4 = vec4(0.0, 0.0, 0.0, 1.0);\n\n#ifdef USE_COLOR\n\tattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\n\tattribute vec3 morphTarget0;\n\tattribute vec3 morphTarget1;\n\tattribute vec3 morphTarget2;\n\tattribute vec3 morphTarget3;\n\t#ifdef USE_MORPHNORMALS\n\t\tattribute vec3 morphNormal0;\n\t\tattribute vec3 morphNormal1;\n\t\tattribute vec3 morphNormal2;\n\t\tattribute vec3 morphNormal3;\n\t#else\n\t\tattribute vec3 morphTarget4;\n\t\tattribute vec3 morphTarget5;\n\t\tattribute vec3 morphTarget6;\n\t\tattribute vec3 morphTarget7;\n\t#endif\n#endif\n#ifdef USE_SKINNING\n\tattribute vec4 skinIndex;\n\tattribute vec4 skinWeight;\n#endif\n\n#define STANDARD\n\n#define GAMMA_FACTOR 2\n\nvarying vec3 vViewPosition;\n#ifdef IS_FOLIAGE\nvarying float vDepth;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#define PI 3.14159\n#define PI2 6.28318\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\n\n#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n#endif\n\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif\n\n#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif\n\n#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG ) && ! defined( STANDARD )\n\tvarying vec3 vReflect;\n\tuniform float refractionRatio;\n#endif\n\n#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif\n#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif\n#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureWidth;\n\t\tuniform int boneTextureHeight;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif\n\n#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHTS > 0\n\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHTS > 0\n\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\n\t#endif\n\n\t#if NUM_POINT_LIGHTS > 0\n\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\n\t#endif\n\n#endif\n\n#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif\n#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n\tuniform float logDepthBufFC;\n#endif\n\nhighp mat4 transpose(in highp mat4 inMatrix) {\n    highp vec4 i0 = inMatrix[0];\n    highp vec4 i1 = inMatrix[1];\n    highp vec4 i2 = inMatrix[2];\n    highp vec4 i3 = inMatrix[3];\n\n    highp mat4 outMatrix = mat4(\n         vec4(i0.x, i1.x, i2.x, i3.x),\n         vec4(i0.y, i1.y, i2.y, i3.y),\n         vec4(i0.z, i1.z, i2.z, i3.z),\n         vec4(i0.w, i1.w, i2.w, i3.w)\n         );\n\n    return outMatrix;\n}\n\nvoid main() {\n    mat4 modelMatrix = transpose(mat4(transform1, transform2, transform3, transform4));\n    mat4 modelViewMatrix = viewMatrix * modelMatrix;\n\t#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif\n\t#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = uv2;\n#endif\n\t#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif\n\nvec3 tr1 = vec3(transform1.x, transform2.x, transform3.x);\nvec3 tr2 = vec3(transform1.y, transform2.y, transform3.y);\nvec3 tr3 = vec3(transform1.z, transform2.z, transform3.z);\n\nvec3 objectNormal = mat3(tr1, tr2, tr3) * vec3( normal );\n\n#ifdef USE_MORPHNORMALS\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif\n\n#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif\n#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n#endif\n\n#ifdef FLIP_SIDED\n\tobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;\n\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\nvec3 transformed = vec3( position );\n\n#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif\n\n#ifdef USE_MORPHTARGETS\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif\n\n#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\tskinned  = bindMatrixInverse * skinned;\n#endif\n\n\n#if defined( IS_TREE ) || defined( IS_FOLIAGE )\nfloat randSeed = transform1.w + transform2.w + transform3.w;\nfloat randomVal = fract(sin(randSeed * 12356.332));\ntransformed.x += randomVal * TREE_AMPLITUDE * cos(time * TREE_PERIOD + randomVal * 20.) * transformed.z;\ntransformed.y += randomVal * TREE_AMPLITUDE * sin(time * TREE_PERIOD + randomVal * 20.) * transformed.z;\n#endif\n#ifdef IS_FOLIAGE\ntransformed += LEAF_AMPLITUDE * normal * cos(time * LEAF_PERIOD + randomVal * 7.) * uv.y;\n#endif\n\n#ifdef USE_SKINNING\n\tvec4 mvPosition = modelViewMatrix * skinned;\n#else\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;\n\n#ifdef USE_LOGDEPTHBUF\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t#else\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\t#endif\n#endif\n\n\tvViewPosition = - mvPosition.xyz;\n#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( STANDARD ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\t#ifdef USE_SKINNING\n\t\tvec4 worldPosition = modelMatrix * skinned;\n\t#else\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n\t#endif\n#endif\nworldPosition.y += time * 1000.;\n#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG ) && ! defined( STANDARD )\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t#ifdef ENVMAP_MODE_REFLECTION\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t#else\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t#endif\n#endif\n\n#ifdef USE_SHADOWMAP\n    #if NUM_DIR_LIGHTS > 0\n    \tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n    \t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n    \t}\n\t#endif\n\n\t#if NUM_SPOT_LIGHTS > 0\n    \tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n    \t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n    \t}\n\t#endif\n\n\t#if NUM_POINT_LIGHTS > 0\n    \tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n    \t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n    \t}\n\t#endif\n#endif\n\n#ifdef IS_FOLIAGE\nvDepth = (gl_Position.z / gl_Position.w) * 0.5 + 0.5;\n#endif\n}\n"},function(e,t,n){"use strict";function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),r=n(25),a=function(){function e(t,n){i(this,e),this.materialDecorator=n,this.model=t}return o(e,[{key:"batchSameGeomIdUndecoratedMeshes",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=t.batchMeshesWithChildren,i=t.excludeIfNameContains,o=this._formSameGeomObjectsArray(this.model,n,i);o.forEach(function(t){t.length>1&&e._prepBatchFromObjectList(e.model,t,n)})}},{key:"_formSameGeomObjectsArray",value:function(e,t,n){var i=[],o=void 0,r=0;return e.traverse(function(e){for(o=!1,r=0;r<n.length;r++)e.name.includes(n[r])&&(o=!0);if(e instanceof THREE.Mesh&&(!n||!o)&&(t||!e.children||0===e.children.length)){var a=!1;for(r=0;r<i.length;r++)if(i[r][0].geometry.uuid===e.geometry.uuid){i[r].push(e),a=!0;break}a||i.push([e])}}),i}},{key:"formBatchFromMeshAndTransforms",value:function(e,t){var n=this.materialDecorator.rewriteInstancedMaterial(e.material),i=e.material;e.material=n;var o=r.buildFromTransforms(t,e,e.name+"_instancedMesh",new THREE.Vector3(0,0,0),1e4,1e4,1e4);return e.material=i,o}},{key:"_prepBatchFromObjectList",value:function(e,t,n){var i=t.slice(),o=t[0],a=this.materialDecorator.rewriteInstancedMaterial(o.material);o.material=a;var s=r.buildInBox(t,o,o.name+"_instancedMesh",new THREE.Vector3(0,0,0),1e4,1e4,1e4);if(e.add(s),n)for(var l=i.length-1;l>=0;l--){var c=i[l];if(c.children||c.children.length>0)for(var d=c.children.length-1;d>=0;d--){var u=c.children[d];c.remove(u),u.matrix.premultiply(c.matrix),u.matrix.decompose(u.position,u.quaternion,u.scale),c.parent.add(u),u.matrixWorldNeedsUpdate=!0}c.parent.remove(c),i[l]=null}else for(var f=i.length-1;f>=0;f--)i[f].parent.remove(i[f]),i[f]=null}},{key:"propagateTransforms",value:function(e,t){for(var n={transformArray1:[],transformArray2:[],transformArray3:[]},i=new THREE.Matrix4,o=new THREE.Matrix4,r=t.transformArray1,a=t.transformArray2,s=t.transformArray3,l=0;l<r.length;l+=4){i.set(r[l],r[l+1],r[l+2],r[l+3],a[l],a[l+1],a[l+2],a[l+3],s[l],s[l+1],s[l+2],s[l+3],0,0,0,1);for(var c=0;c<e.length;c++)o.multiplyMatrices(i,e[c].matrixWorld),n.transformArray1.push(o.elements[0],o.elements[4],o.elements[8],o.elements[12]),n.transformArray2.push(o.elements[1],o.elements[5],o.elements[9],o.elements[13]),n.transformArray3.push(o.elements[2],o.elements[6],o.elements[10],o.elements[14])}return n}},{key:"removeEmptyObjectsFromScene",value:function(){var e=[];this.model.traverse(function(t){"Object3D"!==t.type||t.children&&0!==t.children.length||e.push(t)});for(var t=e.length-1;t>=0;t--)e[t].parent.remove(e[t]),e[t]=null}}]),e}();t.default=a},function(e,t){"use strict";function n(e,t,n,i){var o=new THREE.Vector3(-t/2,0,-i/2),r=new THREE.Vector3(t/2,n,i/2);return o.add(e),r.add(e),new THREE.Box3(o,r)}function i(e){var t=new THREE.InstancedBufferGeometry;t.setIndex(e.geometry.index);for(var n in e.geometry.attributes)e.geometry.attributes.hasOwnProperty(n)&&t.addAttribute(n,e.geometry.attributes[n]);return t.groups=[],e.geometry.groups.forEach(function(e){return t.addGroup(e.start,e.count,e.materialIndex)}),t}function o(e,t,n){for(var i=[],o=new THREE.Vector3,r=0,a=e.length;r<a;r++)e[r].updateMatrixWorld(!0),e[r].getWorldPosition(o),t.containsPoint(o)?i.push(e[r].matrixWorld.elements):n.push(e[r].matrixWorld.elements);return i}function r(e,t,n,i,o){for(var r=[],a=[],s=[],l=0;l<n.length;l++)r.push(n[l][0]),a.push(n[l][1]),s.push(n[l][2]),r.push(n[l][4]),a.push(n[l][5]),s.push(n[l][6]),r.push(n[l][8]),a.push(n[l][9]),s.push(n[l][10]),r.push(n[l][12]),a.push(n[l][13]),s.push(n[l][14]);var c=new THREE.InstancedBufferAttribute(new Float32Array(r),4,1,!1);e.addAttribute("transform1",c);var d=new THREE.InstancedBufferAttribute(new Float32Array(a),4,1,!1);e.addAttribute("transform2",d);var u=new THREE.InstancedBufferAttribute(new Float32Array(s),4,1,!1);e.addAttribute("transform3",u),e.boundingBox=i,e.boundingSphere=i.getBoundingSphere();var f=new THREE.Mesh(e,t);return f.name=o,f}t.buildInBox=function(e,t,a,s,l,c,d){var u=[],f=n(s,l,c,d),h=i(t),p=o(e,f,u),m=r(h,t.material,p,f,a);return m},t.buildFromTransforms=function(e,t,o,r,a,s,l){var c=n(r,a,s,l),d=i(t),u=new THREE.InstancedBufferAttribute(new Float32Array(e.transformArray1),4,1,!1);d.addAttribute("transform1",u);var f=new THREE.InstancedBufferAttribute(new Float32Array(e.transformArray2),4,1,!1);d.addAttribute("transform2",f);var h=new THREE.InstancedBufferAttribute(new Float32Array(e.transformArray3),4,1,!1);d.addAttribute("transform3",h),d.boundingBox=c,d.boundingSphere=c.getBoundingSphere();var p=new THREE.Mesh(d,t.material);return p.name=o,p},t.addCustomInstanceAttribute=function(e,t,n,i,o,r){for(var a=t.geometry,s=a.attributes.transform1.count,l=o.length/n,c=[],d=0,u=0;d<s;d+=i){u=r?Math.random()*(l-1):u<l?u:0;for(var f=0;f<n;f++)c.push(o[u*n+f]);u++}var h=new THREE.InstancedBufferAttribute(new Float32Array(c),n,i,!1);a.addAttribute(e,h)}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),a=n(3),s=i(a),l=n(5),c=i(l),d=n(27),u=i(d),f=n(28),h=i(f),p=n(33),m=i(p),v=new Event("startQuest"),g=new Event("pause"),E=0,y=function(){function e(t,n,i,r){var a=this;o(this,e),this.scene=n,this.camera=i,this.controls=r,this.lights=[],this.scene.children.forEach(function(e){e instanceof THREE.Light&&a.lights.push({light:e,originalIntensity:e.intensity})}),this.fromEyeRaycaster=new THREE.Raycaster(new THREE.Vector3,new THREE.Vector3(0,0,1),0,5),this.navMeshes=[],this.activeObjects=[],this.activeObjectsColliders=[],this.interactCommand=!1,this._tV2=new THREE.Vector2(0),this.v0=new THREE.Vector3(0,0,0),this._tArr=[],this.starfield=new h.default(t,this.scene),this.doorMeshes=[],this.findUsableMeshes(this.scene),this.doors=this.createDoors(this.doorMeshes),this.doors.forEach(function(e){a.navMeshes.push(e.underDoorNavMesh),e.doorControls.forEach(function(t){var n=new m.default({type:"door",controllerMesh:t,object:e,activeObjectsColliders:a.activeObjectsColliders,outline:!0,highlight:!0});a.activeObjects.push(n)})}),this.spaceSuit=new m.default({type:"suit",controllerMesh:this.spaceSuitMesh,activeObjectsColliders:this.activeObjectsColliders,highlight:!0,highlightMeshScale:1.02,highlightWaveHeight:4,highlightWaveSpeed:2,highlightWavePause:6}),this.activeObjects.push(this.spaceSuit),this.repairKit=new m.default({type:"repairKit",controllerMesh:this.repairKitMesh,activeObjectsColliders:this.activeObjectsColliders,highlight:!0,highlightMeshScale:1.05,highlightWaveHeight:2.7,highlightWaveSpeed:1.7,highlightWavePause:1}),this.activeObjects.push(this.repairKit),this.controlPanel=new m.default({type:"controlPanel",controllerMesh:this.controlPanelMesh,activeObjectsColliders:this.activeObjectsColliders,highlight:!0,highlightWavePause:.7}),this.activeObjects.push(this.controlPanel),this.outerPipeBroken=new m.default({type:"outerPipeBroken",controllerMesh:this.outerPipeBrokenMesh,object:this.outerPipeRepairedMesh,activeObjectsColliders:this.activeObjectsColliders,outline:!0,highlight:!0,highlightWaveHeight:2.9,highlightWaveSpeed:1.7,highlightWavePause:2}),this.activeObjects.push(this.outerPipeBroken),this.outerPipeRepairedMesh.visible=!1,document.addEventListener("interact",function(){a.interactCommand=!0}),document.addEventListener("toogleDoor",function(e){e.detail&&e.detail.name&&e.detail.action&&a.doors.forEach(function(t){t.mesh.name===e.detail.name&&"close"===e.detail.action&&t.close()})}),this.camIntroStartPos=(new THREE.Vector3).fromArray(s.default.camera.cameraPos),this.camIntroEndPos=(new THREE.Vector3).fromArray(s.default.camera.cameraIntroTargetPos),document.addEventListener("startIntro",function(){a.startIntro()}),this.playingIntro=!1,document.addEventListener("pause",function(){a.pause()}),document.addEventListener("unpause",function(){a.unpause()}),this.interactInfo=document.getElementById("interactInfo"),s.default.isDesktop||this.interactInfo.addEventListener("click",function(){a.interactCommand=!0})}return r(e,[{key:"findUsableMeshes",value:function(e){var t=this;e.traverse(function(e){e.name.includes("door_root")?t.doorMeshes.push(e):"space_suit"===e.name?t.spaceSuitMesh=e:"repair_kit"===e.name?t.repairKitMesh=e:"control_panel"===e.name?t.controlPanelMesh=e:"outer_pipe_broken"===e.name?t.outerPipeBrokenMesh=e:"outer_pipe_repaired"===e.name&&(t.outerPipeRepairedMesh=e)})}},{key:"createDoors",value:function(e){var t=[],n=void 0;return e.forEach(function(e){n=new u.default(e,s.default.appLogic.doors),t.push(n)}),t}},{key:"pause",value:function(){c.default.paused||(c.default.paused=!0)}},{key:"unpause",value:function(){c.default.paused&&(c.default.paused=!1)}},{key:"startIntro",value:function(){c.default.introStartTime=s.default.time,this.playingIntro=!0}},{key:"finishIntro",value:function(){this.playingIntro=!1,setTimeout(function(){c.default.started=!0,c.default.gameStartTime=s.default.time,document.dispatchEvent(v)},100)}},{key:"startGameFadeIn",value:function(){E=(s.default.time-c.default.gameStartTime)/s.default.lightsInDuration,E<=1.5*s.default.lightsInDuration&&(E=Math.min(E,1),this.lights.forEach(function(e){e.light.intensity=E*E*e.originalIntensity}),this.starfield.updateBrightness(E),this.activeObjects.forEach(function(e){e.updateSelectionBrightness(E*E)}))}},{key:"updateIntro",value:function(){E=(s.default.time-c.default.introStartTime)/s.default.introDuration,E=Math.min(E,1),this.lights.forEach(function(e){e.light.intensity=(1-E*E)*e.originalIntensity}),this.starfield.updateBrightness(1-E*E),E=E<.5?2*E*E:-1+(4-2*E)*E,this.camera.position.lerpVectors(this.camIntroStartPos,this.camIntroEndPos,E),this.camera.lookAt(this.v0),this.camera.updateProjectionMatrix(),E>=1&&this.finishIntro()}},{key:"update",value:function(e){if(this.playingIntro)this.updateIntro();else{for(this.checkWinLose(),this.startGameFadeIn(),this.doors.forEach(function(t){t.update(e)}),this.activeObjects.forEach(function(e){e.update(s.default.time)}),E=0;E<this.activeObjects.length;E++)this.activeObjects[E].deselectObject();if(c.default.inSpace||this.controls.currentFloorMesh&&!this.controls.currentFloorMesh.name.includes("door_nav_blocker"))for(this.fromEyeRaycaster.setFromCamera(this._tV2,this.camera),this._tArr=this.fromEyeRaycaster.intersectObjects(this.activeObjectsColliders),E=0;E<this._tArr.length;E++)this._tArr[E].object.userData.activeObject&&this._tArr[E].object.userData.activeObject.selectObject();for(this.interactInfo.style.display=this._tArr.length?"block":"none",E=0;E<this.activeObjects.length;E++)this.activeObjects[E].selected&&this.interactCommand&&this.activeObjects[E].makeAction();this.interactCommand=!1}}},{key:"checkWinLose",value:function(){var e=this;c.default.inSpace&&!c.default.pickups.suit&&setTimeout(function(){c.default.lose=!0,c.default.gameoverMessage="You die in space as oxygen leaves the cell!",e.gameover()},1e3),c.default.engineEnabled&&c.default.pipeRepaired&&setTimeout(function(){c.default.win=!0,c.default.gameoverMessage="Engine works as expected!<br /> Good job!",e.gameover()},1500)}},{key:"gameover",value:function(){var e=document.getElementById("controlPanelRoot");e.style.display="none",document.dispatchEvent(g),this.interactInfo.style.zIndex="-10";var t=document.getElementById("gameoverRoot"),n=document.getElementById("gameoverText"),i=c.default.gameoverMessage;n.innerHTML=i,t.style.display="block"}}]),e}();t.default=y},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),a=n(5),s=i(a),l={OPEN:0,CLOSED:1,OPENING:2,CLOSING:3},c=function(){function e(t,n){var i=this;o(this,e),this.openingTime=n.openingTime,this.mesh=t,this.underDoorNavMesh=null,this.doorLeft=null,this.doorRight=null,this.doorControls=[],this.state=void 0,this.states=l,this._tPos=null;for(var r=0;r<this.mesh.children.length;r++)this.mesh.children[r].name.includes("door_nav_blocker")?this.underDoorNavMesh=this.mesh.children[r]:this.mesh.children[r].name.includes("door_left")?this.doorLeft=this.mesh.children[r]:this.mesh.children[r].name.includes("door_right")?this.doorRight=this.mesh.children[r]:this.mesh.children[r].name.includes("door_controls")&&this.doorControls.push(this.mesh.children[r]);this.originalNavMeshZ=this.underDoorNavMesh.position.z,this.originalLeftY=this.doorLeft.position.y,this.originalRightY=this.doorRight.position.y,this.openLeftY=this.originalLeftY+4.3,this.openRightY=this.originalRightY-4.3,this.resetClosed(),document.addEventListener("toogleDoors",function(){i.state===l.CLOSED&&i.open(),i.state===l.OPEN&&i.close()})}return r(e,[{key:"resetClosed",value:function(){this.underDoorNavMesh.position.z=-1e4,this.doorLeft.position.y=this.originalLeftY,this.doorRight.position.y=this.originalRightY,this.state=l.CLOSED}},{key:"resetOpen",value:function(){this.underDoorNavMesh.position.z=this.originalNavMeshZ,this.doorLeft.position.y=this.openLeftY,this.doorRight.position.y=this.openRightY,this.state=l.OPEN}},{key:"open",value:function(){this.state===l.CLOSED&&(this.state=l.OPENING,this.progress=0)}},{key:"close",value:function(){this.state===l.OPEN&&(s.default.doorsOpen[this.mesh.name]=!1,this.state=l.CLOSING,this.progress=1,this.underDoorNavMesh.position.z=-1e4)}},{key:"update",value:function(e){this.state!==l.OPEN&&this.state!==l.CLOSED&&(this.state===l.OPENING?1===this.progress?(this.state=l.OPEN,s.default.doorsOpen[this.mesh.name]=!0,this.underDoorNavMesh.position.z=this.originalNavMeshZ):(this.progress+=e/this.openingTime,this.progress=Math.min(this.progress,1),this.updateDoorPosition()):this.state===l.CLOSING&&(0===this.progress?this.state=l.CLOSED:(this.progress-=e/this.openingTime,this.progress=Math.max(this.progress,0),this.updateDoorPosition())))}},{key:"updateDoorPosition",value:function(){this._tPos=this.ease(this.progress),this.doorLeft.position.y=(1-this._tPos)*this.originalLeftY+this._tPos*this.openLeftY,this.doorRight.position.y=(1-this._tPos)*this.originalRightY+this._tPos*this.openRightY}},{key:"ease",value:function(e){return e*e}}]),e}();t.default=c},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),a=n(29),s=i(a),l=n(30),c=i(l),d=n(31),u=i(d),f=n(32),h=i(f),p=n(3),m=i(p),v=function(){function e(t,n){o(this,e),this.renderer=t;var i=this.generateStarfieldMap(),r=new THREE.PlaneBufferGeometry(1,1,30,30),a=new THREE.RawShaderMaterial({uniforms:{radius:{value:500},map:{value:i},brightness:{value:1}},vertexShader:u.default,fragmentShader:h.default}),s=new THREE.Mesh(r,a);n.add(s),s.frustumCulled=!1,this.starfieldMaterial=a}return r(e,[{key:"updateBrightness",value:function(e){this.starfieldMaterial.uniforms.brightness.value=e}},{key:"generateStarfieldMap",value:function(){var e=m.default.isDesktop?2048:1024,t=m.default.isDesktop?1024:512,n=new THREE.WebGLRenderTarget(e,t,{minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter,format:THREE.RGBFormat}),i=new THREE.ShaderMaterial({uniforms:{offsetRepeat:{value:new THREE.Vector4(0,0,1,1)}},vertexShader:s.default,fragmentShader:c.default}),o=new THREE.OrthographicCamera(e/-2,e/2,t/2,t/-2,-1e4,1e4);o.position.z=10;var r=new THREE.Scene,a=new THREE.PlaneBufferGeometry(e,t),l=new THREE.Mesh(a,i);return r.add(l),this.renderer.render(r,o,n,!0),n.texture}}]),e}();t.default=v},function(e,t){e.exports="#include <common>\n\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvarying float vWorldPosY;\n\nvoid main() {\n\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_ENVMAP\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\n\t#include <worldpos_vertex>\n    vec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n    vWorldPosY = worldPosition.y;\n\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\n}\n"},function(e,t){e.exports="precision highp float;\nprecision highp int;\n\n#define M_PI 3.141592653589\n\nvarying vec2 vUv;\n\nconst vec3 backgroundColor = vec3(0.04, 0.05, 0.09);\n\nfloat hash( float n ) { return fract(sin(n) * 753.5453123); }\n// Noise by inigo quilez - iq/2013 : https://www.shadertoy.com/view/4sfGzS#\nfloat noise( vec3 x )\n{\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n\n    float n = p.x + p.y*157.0 + 113.0*p.z;\n    return mix(mix(mix( hash(n+  0.0), hash(n+  1.0),f.x),\n                   mix( hash(n+157.0), hash(n+158.0),f.x),f.y),\n               mix(mix( hash(n+113.0), hash(n+114.0),f.x),\n                   mix( hash(n+270.0), hash(n+271.0),f.x),f.y),f.z);\n}\n\nfloat noiseOctaves ( vec3 v ) {\n    float result = 0.0;\n    for (float i = 2.0; i < 11.0; i++) {\n        result += noise(v * i)/((i - 1.0) * 2.0);\n    }\n    return result;\n}\n\nvoid main() {\n    float phi = M_PI*(vUv.x*2.0);\n    float theta = M_PI*(vUv.y);\n\tvec3 unitSpherePosition = vec3(sin(theta)*cos(phi), sin(theta)*sin(phi), cos(theta));\n\n    float noiseValue = noiseOctaves(unitSpherePosition * 50.);\n\n    float stars = max(noiseValue - 0.9, 0.0);\n\n    noiseValue = noiseOctaves(unitSpherePosition * 3.);\n    vec3 value = backgroundColor * noiseValue + stars;\n\n    gl_FragColor.rgb = value;\n    gl_FragColor.a = 1.;\n}\n"},function(e,t){e.exports="precision highp float;\nprecision highp int;\n\n#define M_PI 3.141592653589\n\nattribute vec3 position;\nattribute vec2 uv;\n\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\n\nuniform float radius;\n\nvarying vec3 vNormal;\nvarying vec2 vUv;\n\nvoid main() {\n    float phi = M_PI*(uv.x*2.0);\n    float theta = M_PI*(uv.y);\n\tvec3 unitSpherePosition = vec3(sin(theta)*cos(phi), sin(theta)*sin(phi), cos(theta));\n\n    vec3 spherePosition = unitSpherePosition * radius;\n\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(spherePosition, 1.);\n\n    vNormal = unitSpherePosition;\n    vUv = uv;\n}\n"},function(e,t){e.exports="precision highp float;\nprecision highp int;\n\nuniform sampler2D map;\nuniform float brightness;\n\nvarying vec3 vNormal;\nvarying vec2 vUv;\n\nvoid main() {\n    gl_FragColor = texture2D(map, vUv) * brightness;\n}\n"},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function");
}Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),a=n(3),s=i(a),l=n(5),c=i(l),d=n(29),u=i(d),f=n(34),h=i(f),p=new Event("pause"),m=new Event("activateControlPanel"),v=new Event("enableSpaceControls"),g=new Event("disableSpaceControls"),E=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=t.type,i=t.controllerMesh,r=t.object,a=t.activeObjectsColliders,s=t.outline,l=t.highlight,c=t.highlightMeshScale,d=t.highlightWaveHeight,u=t.highlightWaveSpeed,f=t.highlightWavePause;switch(o(this,e),this.type=n,this.disposeMessage=null,this.type){case"suit":this.disposeMessage="You have equipped Space Suit";break;case"repairKit":this.disposeMessage="You picked up Repair Kit";break;case"outerPipeBroken":this.disposeMessage="You successfully repaired Broken Pipe!";break;default:this.disposeMessage="Default activeObject disposeMessage"}this.controller=i,this.controllableObject=r,this.outlineMesh=null,this.highlightMesh=null,this.highlightMeshScale=c||1.03,this.highlightWaveHeight=d||1.5,this.highlightWaveSpeed=u||.75,this.highlightWavePause=f||.3,this.selected=!1,this.selectedColor=new THREE.Color(5614250),this.deselectedColor=new THREE.Color(16742263),this.controllerCollider=this.controller;for(var h=0;h<this.controller.children.length;h++)if(this.controller.children[h].name.includes("collider")){this.controllerCollider=this.controller.children[h];break}this.controllerCollider.userData.activeObject=this,this.activeObjectsColliders=a,this.activeObjectsColliders.push(this.controllerCollider),s&&this.addOutlineMesh(),l&&this.addHighlightMesh()}return r(e,[{key:"addOutlineMesh",value:function(){var e=this.controller.geometry,t=new THREE.MeshBasicMaterial({side:THREE.BackSide,transparent:!0});t.color=this.deselectedColor,t.opacity=.2;var n=new THREE.Mesh(e,t);n.name=this.controller.name+"_outlineMesh",this.controller.parent.add(n),n.matrix.compose(this.controller.position,this.controller.quaternion,this.controller.scale),n.matrix.decompose(n.position,n.quaternion,n.scale),n.scale.multiplyScalar(1.05),this.outlineMesh=n}},{key:"addHighlightMesh",value:function(){var e=this.controller.geometry,t=THREE.UniformsUtils.clone(THREE.ShaderLib.basic.uniforms),n=new THREE.ShaderMaterial({uniforms:t,vertexShader:u.default,fragmentShader:h.default,transparent:!0});n.uniforms.diffuse.value=this.deselectedColor,n.uniforms.opacity.value=.4,n.uniforms.time={value:0},n.uniforms.waveHeightSpeedPause={value:new THREE.Vector3(this.highlightWaveHeight,this.highlightWaveSpeed,this.highlightWavePause)};var i=new THREE.Mesh(e,n);i.name=this.controller.name+"_highlightMesh",this.controller.parent.add(i),i.matrix.compose(this.controller.position,this.controller.quaternion,this.controller.scale),i.matrix.decompose(i.position,i.quaternion,i.scale),i.scale.multiplyScalar(this.highlightMeshScale),this.highlightMesh=i}},{key:"updateSelectionBrightness",value:function(e){this.highlightMesh&&(this.highlightMesh.material.uniforms.opacity.value=.2*e),this.outlineMesh&&(this.outlineMesh.material.opacity=.2*e)}},{key:"update",value:function(e){this.highlightMesh&&(this.highlightMesh.material.uniforms.time.value=e)}},{key:"selectObject",value:function(){this.selected||(this.selected=!0,this.highlightMesh&&(this.highlightMesh.material.uniforms.diffuse.value=this.selectedColor),this.outlineMesh&&(this.outlineMesh.material.color=this.selectedColor))}},{key:"deselectObject",value:function(){this.selected&&(this.selected=!1,this.highlightMesh&&(this.highlightMesh.material.uniforms.diffuse.value=this.deselectedColor),this.outlineMesh&&(this.outlineMesh.material.color=this.deselectedColor))}},{key:"makeAction",value:function(){switch(this.type){case"door":this.controllableObject.state===this.controllableObject.states.CLOSED?(this.controllableObject.open(),this.openDoorGatewayLogic()):this.controllableObject.state===this.controllableObject.states.OPEN&&(this.controllableObject.close(),this.closeDoorGatewayLogic());break;case"controlPanel":c.default.controlPanelActive=!0,document.dispatchEvent(p),document.dispatchEvent(m);break;case"outerPipeBroken":c.default.engineEnabled?this.popupMessage("Voltage is too high to operate."):c.default.pickups.repairKit?(this.controllableObject.visible=!0,c.default.pipeRepaired=!0,this.dispose()):this.popupMessage("Couldn't repair it with bare hands");break;case"suit":case"repairKit":this.dispose();break;default:console.log("unhandled activeObject action")}}},{key:"openDoorGatewayLogic",value:function(){if("door_root_7"===this.controllableObject.mesh.name){var e=new CustomEvent("toogleDoor",{detail:{name:"door_root_6",action:"close"}});document.dispatchEvent(e),setTimeout(function(){c.default.doorsOpen.door_root_7&&document.dispatchEvent(v)},s.default.appLogic.gatewayControlsChangeDecay)}else if("door_root_6"===this.controllableObject.mesh.name){var t=new CustomEvent("toogleDoor",{detail:{name:"door_root_7",action:"close"}});document.dispatchEvent(t),document.dispatchEvent(g)}}},{key:"closeDoorGatewayLogic",value:function(){"door_root_7"===this.controllableObject.mesh.name&&document.dispatchEvent(g)}},{key:"dispose",value:function(){"suit"===this.type?c.default.pickups.suit=!0:"repairKit"===this.type&&(c.default.pickups.repairKit=!0);for(var e=0;e<this.activeObjectsColliders.length;e++)this.activeObjectsColliders[e].name===this.controllerCollider.name&&this.activeObjectsColliders.splice(e,1);this.controller.parent.remove(this.controller),this.highlightMesh&&this.highlightMesh.parent.remove(this.highlightMesh),this.outlineMesh&&this.outlineMesh.parent.remove(this.outlineMesh),this.controller=null,this.highlightMesh=null,this.outlineMesh=null,this.activeObjectsColliders=null,this.controller=null,this.controllableObject=null,this.popupMessage(this.disposeMessage)}},{key:"popupMessage",value:function(e){var t=document.createElement("div");t.className=s.default.isDesktop?"disposeInfo":"disposeInfoMobile",t.innerHTML=e,t.style.display="block",document.body.appendChild(t),setTimeout(function(){t.className=s.default.isDesktop?"disposeInfoHidden":"disposeInfoHiddenMobile"},1e3),setTimeout(function(){document.body.removeChild(t)},2e3)}}]),e}();t.default=E},function(e,t){e.exports="uniform vec3 diffuse;\nuniform float opacity;\n\nuniform float time;\nuniform vec3 waveHeightSpeedPause;\n\nvarying float vWorldPosY;\n\nvoid main() {\n    float waveHeight = waveHeightSpeedPause.x;\n    float waveSpeed = waveHeightSpeedPause.y;\n    float wavePause = waveHeightSpeedPause.z;\n\n    float wave = mod(vWorldPosY - time * waveSpeed, waveHeight + wavePause); // [0, h+p]\n    wave = max(0., wave - wavePause) / waveHeight; // [0, 1]\n    gl_FragColor.rgb = diffuse.rgb * wave;\n    gl_FragColor.a = opacity * min(wave + 0.5, 1.);\n}\n"},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),a=n(3),s=i(a),l=n(5),c=i(l),d=n(36),u=i(d);window.THREE=window.THREE||THREE,n(37),n(38);var f=new Event("pause"),h=void 0,p={height:10,moveForward:!1,moveLeft:!1,moveBackward:!1,moveRight:!1,speedModifier:1,shiftSpeedModifier:2,jump:!1,isJumping:!1,moveForwardBackMultiplier:1,moveLeftRightMultiplier:.9,mobileRotateHorizontalMult:.35,mobileRotateVerticalMult:.5,mobileLookLeftRight:0,mobileLookUpDown:0,velocity:new THREE.Vector3(0,0,0),raycaster:new THREE.Raycaster(new THREE.Vector3,new THREE.Vector3(0,-1,0),0,20),walkingSpeed:200,spaceSpeed:70,jumpStrength:17,gravity:50},m=new THREE.Vector3,v=new THREE.Vector3,g=new THREE.Vector3,E=void 0,y=void 0,b=void 0,_=void 0,w=[],M=new THREE.Vector3,x=new THREE.Vector3,S=new THREE.Euler(0,0,0,"YXZ"),T=new THREE.Vector3,P=new THREE.Vector3,L=new THREE.Vector3,R=0,C=function(e){switch(e.keyCode){case 38:case 87:p.moveForward=!0;break;case 37:case 65:p.moveLeft=!0;break;case 40:case 83:p.moveBackward=!0;break;case 39:case 68:p.moveRight=!0;break;case 16:p.speedModifier=p.shiftSpeedModifier;break;case 32:p.jump=!0;break;case 27:}},k=function(e){switch(e.keyCode){case 38:case 87:p.moveForward=!1;break;case 37:case 65:p.moveLeft=!1;break;case 40:case 83:p.moveBackward=!1;break;case 39:case 68:p.moveRight=!1;break;case 16:p.speedModifier=1;break;case 32:p.jump=!1}},D=function(){function e(t,n,i){var r=this;o(this,e),h=this,this.camera=t,this.domElement=n,this.walkerEnabled=!1,this.isDesktop=s.default.isDesktop,this.rotateOnMouseDown=!1,this.currentFloorMesh=null,this.walkerTouchControls=null,this.orbitControls=new THREE.OrbitControls(t,n),this.orbitControls.enableDamping=!0,this.orbitControls.minDistance=s.default.controls.minDistance,this.orbitControls.maxDistance=s.default.controls.maxDistance,this.orbitControls.rotateSpeed=s.default.controls.rotateSpeed,this.orbitControls.enabled=s.default.isDebug,this.infoEl=document.createElement("div"),this.infoEl.className="controlsInfo",this.isDesktop?this.infoEl.innerHTML="Movement: WASD / Space / Shift + mouse. Interact: E. Press Escape to pause.":(this.infoEl.style.width="60%",this.infoEl.style.height="20%",this.infoEl.style.right="0",this.infoEl.innerHTML="Touch controller to move, touch out of controller to look around."),this.walkerControls=new THREE.PointerLockControls(t,n),this.cObj=this.walkerControls.getObject(),this.cObj.name="pointerLockObject",i.add(this.cObj),this.navMeshes=[],this.spaceNavMesh=new THREE.Object3D,this.onKeyDown=C.bind(this),this.onKeyUp=k.bind(this),this.resetCameraOrbit(),document.addEventListener("startIntro",function(){r.enableWalker(),r.walkerControls.enabled=!1}),document.addEventListener("startQuest",function(){r.resetWalkerPosition(),r.walkerControls.enabled=!r.rotateOnMouseDown}),document.addEventListener("pause",function(){r.disableWalker()}),document.addEventListener("unpause",function(){r.enableWalker()}),document.addEventListener("enableSpaceControls",function(){p.velocity.set(0,0,0),c.default.inSpace=!0}),document.addEventListener("disableSpaceControls",function(){p.raycaster.set(new THREE.Vector3,new THREE.Vector3(0,-1,0),0,20),p.velocity.set(0,0,0),c.default.inSpace=!1})}return r(e,[{key:"enableWalker",value:function(){this.walkerEnabled||(this.rotateOnMouseDown=!1,this.isDesktop?(this._addKeyboardListeners(),this._preparePointerLock()||(this.rotateOnMouseDown=!0,this._rotateOnMouseDownEnable())):(this.walkerTouchControls||(this.walkerTouchControls=new u.default(p,s.default)),this.walkerTouchControls.enable(),this.walkerTouchControls.resetJoystickDiv()),document.body.appendChild(this.infoEl),this.orbitControls.enabled=!1,this.walkerControls.enabled=!this.rotateOnMouseDown,this.walkerEnabled=!0)}},{key:"disableWalker",value:function(){this.walkerEnabled&&(this.isDesktop?(this._removeKeyboardListeners(),this._removePointerLock(),this.rotateOnMouseDown&&this._rotateOnMouseDownDisable()):this.walkerTouchControls.disable(),document.body.removeChild(this.infoEl),document.exitPointerLock(),this.walkerControls.enabled=!1,this.walkerEnabled=!1,document.dispatchEvent(f))}},{key:"addNavMeshes",value:function(e){if(!(e instanceof Array))throw new Error("controls.addBlockers method expects Array as argument");Array.prototype.push.apply(this.navMeshes,e)}},{key:"addSpaceNavMesh",value:function(e){this.spaceNavMesh=e}},{key:"resetCameraOrbit",value:function(){this.camera.position.fromArray(s.default.camera.cameraPos),this.camera.lookAt(new THREE.Vector3(0,0,0)),this.camera.near=s.default.camera.near,this.camera.far=s.default.camera.far,this.camera.updateProjectionMatrix(),this.cObj.position.set(0,0,0),this.cObj.rotation.y=0,this.cObj.children[0].rotation.x=0}},{key:"resetWalkerPosition",value:function(){this.resetCameraWalker(),this.cObj.position.fromArray(s.default.walker.startPos),this.cObj.rotation.y=s.default.walker.startYaw,this.cObj.children[0].rotation.x=s.default.walker.startPitch}},{key:"resetCameraWalker",value:function(){this.camera.position.set(0,0,0),this.camera.rotation.set(0,0,0),this.camera.near=s.default.camera.walkerNear,this.camera.far=s.default.camera.walkerFar,this.camera.updateProjectionMatrix()}},{key:"update",value:function(e){this.orbitControls.enabled&&!this.walkerEnabled||c.default.started&&(this.isDesktop||(this.cObj.rotation.y-=p.mobileLookLeftRight*p.mobileRotateHorizontalMult*e,this.cObj.children[0].rotation.x+=p.mobileLookUpDown*p.mobileRotateVerticalMult*e,this.cObj.children[0].rotation.x=Math.min(Math.max(this.cObj.children[0].rotation.x,-Math.PI/2),Math.PI/2),this.walkerTouchControls.applyInertia()),c.default.inSpace?this.spaceControlsUpdate(e,s.default.time):this.walkerControlsUpdate(e))}},{key:"walkerControlsUpdate",value:function(e){if(p.raycaster.ray.origin.copy(this.cObj.position),w=p.raycaster.intersectObjects(this.navMeshes,!1),E=w.length>0,E&&(this.currentFloorMesh=w[0].object),p.velocity.x-=10*p.velocity.x*e,p.velocity.z-=10*p.velocity.z*e,p.velocity.y-=p.gravity*e,p.moveForward&&(p.velocity.z-=p.walkingSpeed*p.speedModifier*p.moveForwardBackMultiplier*e),p.moveBackward&&(p.velocity.z+=p.walkingSpeed*p.speedModifier*p.moveForwardBackMultiplier*e),p.moveLeft&&(p.velocity.x-=p.walkingSpeed*p.speedModifier*p.moveLeftRightMultiplier*e),p.moveRight&&(p.velocity.x+=p.walkingSpeed*p.speedModifier*p.moveLeftRightMultiplier*e),!p.jump||p.isJumping||c.default.inSpace||(p.velocity.y=p.jumpStrength,p.isJumping=!0),E&&(_=w[0],_.distance+p.velocity.y*e<=p.height&&(this.cObj.position.y=w[0].point.y+p.height,p.velocity.y=0,p.isJumping=!1)),this.cObj.translateY(p.velocity.y*e),y=this.cObj.position.clone(),this.cObj.translateX(p.velocity.x*e),this.cObj.translateZ(p.velocity.z*e),p.raycaster.ray.origin.copy(this.cObj.position),w=[],w=p.raycaster.intersectObjects(this.navMeshes,!1),b=w.length>0,E&&b&&(this.currentFloorMesh=w[0].object),E&&!b){var t=this.cObj.position.clone(),n=_.object.geometry.attributes.position.array;m.fromArray(n,3*_.face.a).applyMatrix4(_.object.matrixWorld),v.fromArray(n,3*_.face.b).applyMatrix4(_.object.matrixWorld),g.fromArray(n,3*_.face.c).applyMatrix4(_.object.matrixWorld);var i=new THREE.Vector3(0).add(m).add(v).add(g).divideScalar(3),o=this._linesIntersectsXZ(m,v,y,t);if(o.intersect||(o=this._linesIntersectsXZ(v,g,y,t),o.intersect||(o=this._linesIntersectsXZ(m,g,y,t))),o.intersect){var r=o.A,a=o.B,s=(new THREE.Vector3).subVectors(a,r),l=(new THREE.Vector3).subVectors(this.cObj.position,r).projectOnVector(s);l.add(r),l.add((new THREE.Vector3).subVectors(i,l).divideScalar(1e3)),l.y=y.y,this.cObj.position.copy(l)}else this.cObj.position.copy(y);p.raycaster.ray.origin.copy(this.cObj.position),w=[],w=p.raycaster.intersectObjects(this.navMeshes,!1),w.length<1&&this.cObj.position.copy(y)}}},{key:"_linesIntersectsXZ",value:function(e,t,n,i){var o=new THREE.Vector2(t.x-e.x,t.z-e.z),r=new THREE.Vector2(i.x-n.x,i.z-n.z),a=(-o.y*(e.x-n.x)+o.x*(e.z-n.z))/(-r.x*o.y+o.x*r.y),s=(r.x*(e.z-n.z)-r.y*(e.x-n.x))/(-r.x*o.y+o.x*r.y),l=a>=0&&a<=1&&s>=0&&s<=1;return{intersect:l,A:e,B:t}}},{key:"spaceControlsUpdate",value:function(e,t){p.velocity.x-=1.5*p.velocity.x*e,p.velocity.y-=1.5*p.velocity.y*e,p.velocity.z-=1.5*p.velocity.z*e,M.set(0,0,-1),x.set(1,0,0),S.set(this.cObj.children[0].rotation.x,this.cObj.rotation.y,0),M.applyEuler(S),x.applyEuler(S),p.moveForward?p.velocity.add(M.multiplyScalar(p.spaceSpeed*e)):p.moveBackward&&p.velocity.sub(M.multiplyScalar(p.spaceSpeed*e)),p.moveRight?p.velocity.add(x.multiplyScalar(p.spaceSpeed*e)):p.moveLeft&&p.velocity.sub(x.multiplyScalar(p.spaceSpeed*e)),this.returnPosState||L.copy(this.cObj.position),this.pushOutAnim?(p.velocity.set(0,0,0),t<this._pullOutStartTime+s.default.spaceWalker.pullOutDuration?(R=1-(t-this._pullOutStartTime)/s.default.spaceWalker.pullOutDuration,R*=R,this.cObj.position.x=P.x*R+L.x*(1-R),this.cObj.position.y=P.y*R+L.y*(1-R),this.cObj.position.z=P.z*R+L.z*(1-R)):(this.pushOutAnim=!1,this.returnPosState=!1)):(this.cObj.position.x+=p.velocity.x*e,this.cObj.position.y+=p.velocity.y*e,this.cObj.position.z+=p.velocity.z*e,T.subVectors(this.cObj.position,L),p.raycaster.set(this.cObj.position,T.normalize(),0,s.default.spaceWalker.blockingRayLength),w=p.raycaster.intersectObject(this.spaceNavMesh,!1),w.length>0?w[0].distance<s.default.spaceWalker.blockingRayMax&&(P.copy(this.cObj.position),this.returnPosState=!0,w[0].distance<s.default.spaceWalker.blockingRayMin&&(this._pullOutStartTime=t,this.pushOutAnim=!0)):this.returnPosState=!1)}},{key:"_rotateOnMouseDownEnable",value:function(){this.domElement.addEventListener("mousedown",this._onMousePressTouchStart,!1),this.domElement.addEventListener("mouseup",this._onMouseReleaseTouchEnd,!1),this.domElement.addEventListener("mouseout",this._onMouseReleaseTouchEnd,!1)}},{key:"_rotateOnMouseDownDisable",value:function(){this.domElement.removeEventListener("mousedown",this._onMousePressTouchStart,!1),this.domElement.removeEventListener("mouseup",this._onMouseReleaseTouchEnd,!1),this.domElement.removeEventListener("mouseout",this._onMouseReleaseTouchEnd,!1)}},{key:"_onMousePressTouchStart",value:function(e){e.preventDefault(),e.changedTouches&&e.changedTouches.length&&!h.walkerControls.enabled||(h.walkerControls.mouseLastPos.x=e.clientX,h.walkerControls.mouseLastPos.y=e.clientY),h.walkerControls.enabled=!0}},{key:"_onMouseReleaseTouchEnd",value:function(){h.walkerControls.enabled=!1}},{key:"_pointerlockchange",value:function(){var e=document.body;document.pointerLockElement===e||document.mozPointerLockElement===e||document.webkitPointerLockElement===e||h.orbitControls.enabled||h.disableWalker()}},{key:"_pointerlockerror",value:function(e){console.log(e);var t=document.body;t.innerHTML="PointerLock Error"}},{key:"_preparePointerLock",value:function(){var e=document.body,t=!1;return("pointerLockElement"in document||"mozPointerLockElement"in document||"webkitPointerLockElement"in document)&&(document.addEventListener("pointerlockchange",this._pointerlockchange,!1),document.addEventListener("mozpointerlockchange",this._pointerlockchange,!1),document.addEventListener("webkitpointerlockchange",this._pointerlockchange,!1),document.addEventListener("pointerlockerror",this._pointerlockerror,!1),document.addEventListener("mozpointerlockerror",this._pointerlockerror,!1),document.addEventListener("webkitpointerlockerror",this._pointerlockerror,!1),e.requestPointerLock=e.requestPointerLock||e.mozRequestPointerLock||e.webkitRequestPointerLock,e.requestPointerLock(),t=!0),t}},{key:"_removePointerLock",value:function(){document.removeEventListener("pointerlockchange",this._pointerlockchange,!1),document.removeEventListener("mozpointerlockchange",this._pointerlockchange,!1),document.removeEventListener("webkitpointerlockchange",this._pointerlockchange,!1),document.removeEventListener("pointerlockerror",this._pointerlockerror,!1),document.removeEventListener("mozpointerlockerror",this._pointerlockerror,!1),document.removeEventListener("webkitpointerlockerror",this._pointerlockerror,!1)}},{key:"_addKeyboardListeners",value:function(){document.addEventListener("keydown",this.onKeyDown,!1),document.addEventListener("keyup",this.onKeyUp,!1)}},{key:"_removeKeyboardListeners",value:function(){document.removeEventListener("keydown",this.onKeyDown,!1),document.removeEventListener("keyup",this.onKeyUp,!1)}},{key:"dispose",value:function(){this.orbitControls.dispose(),this.walkerControls.dispose()}}]),e}();t.default=D},function(e,t){"use strict";function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),o=void 0,r=void 0,a=void 0,s=void 0,l=void 0,c=void 0,d=void 0,u=void 0,f=void 0,h=void 0,p=void 0,m=void 0,v=void 0,g=void 0,E=void 0,y=void 0,b=void 0,_=function(){function e(t,i){var o=this;n(this,e),this.walkerVars=t,this.joystickReturnSpeed=i.controls.joystickReturnSpeed,this._createDivs(),this._applyStyles(),this.moveTouchId=null,this.lookTouchId=null,this.jumpTouchId=null,this.lastMoveTouchPos=new THREE.Vector2,this.lastLookTouchPos=new THREE.Vector2,this._back.addEventListener("touchstart",function(e){Number.isInteger(o.moveTouchId)||(o.moveTouchId=e.changedTouches[0].identifier,o._onMoveTouchChange(e.changedTouches[0]),o._back.style.opacity="0.8")}),this._lookJoystickCont.addEventListener("touchstart",function(e){Number.isInteger(o.lookTouchId)||(o.lookTouchId=e.changedTouches[0].identifier,o.lastLookTouchPos.set(e.changedTouches[0].screenX,e.changedTouches[0].screenY))}),document.addEventListener("touchmove",function(e){o._onTouchMove(e)}),document.addEventListener("touchend",function(e){o._onTouchEnd(e)}),document.addEventListener("touchcancel",function(e){o._onTouchEnd(e)}),this._jumpButtonCont.addEventListener("touchstart",function(e){o.jumpTouchId=e.changedTouches[0].identifier,o.walkerVars.jump=!0})}return i(e,[{key:"enable",value:function(){document.body.appendChild(this._moveJoystickCont),document.body.appendChild(this._lookJoystickCont),document.body.appendChild(this._jumpButtonCont)}},{key:"disable",value:function(){document.body.removeChild(this._moveJoystickCont),document.body.removeChild(this._lookJoystickCont),document.body.removeChild(this._jumpButtonCont)}},{key:"applyInertia",value:function(){this.walkerVars.mobileLookLeftRight/=2,this.walkerVars.mobileLookUpDown/=2,Number.isInteger(this.moveTouchId)||this._smoothResetJoystickDiv()}},{key:"_onTouchMove",value:function(e){e.preventDefault();for(var t=0;t<e.changedTouches.length;t++)e.changedTouches[t].identifier===this.moveTouchId?this._onMoveTouchChange(e.changedTouches[t]):e.changedTouches[t].identifier===this.lookTouchId&&this._onLookTouchChange(e.changedTouches[t])}},{key:"_onTouchEnd",value:function(e){for(var t=0;t<e.changedTouches.length;t++)e.changedTouches[t].identifier===this.moveTouchId?(this.moveTouchId=null,this._back.style.opacity="0.6",this.walkerVars.moveForward=!1,this.walkerVars.moveBackward=!1,this.walkerVars.moveRight=!1,this.walkerVars.moveLeft=!1):e.changedTouches[t].identifier===this.lookTouchId?this.lookTouchId=null:e.changedTouches[t].identifier===this.jumpTouchId&&(this.jumpTouchId=null,this.walkerVars.jump=!1)}},{key:"resetJoystickDiv",value:function(){this._front.style.marginLeft=this._back.clientWidth/2-this._front.clientWidth/2-1+"px",this._front.style.marginTop=this._back.clientHeight/2-this._front.clientHeight/2-1+"px"}},{key:"_smoothResetJoystickDiv",value:function(){o=this._back.clientWidth/2-this._front.clientWidth/2-1,r=this._back.clientHeight/2-this._front.clientHeight/2-1,a=this._front.offsetLeft,s=this._front.offsetTop,l=o-a,c=r-s,d=Math.sqrt(l*l+c*c),l/=d,c/=d,u=a+l*this.joystickReturnSpeed,f=s+c*this.joystickReturnSpeed,h=(u-o)*(u-o)+(f-r)*(f-r),h<this.joystickReturnSpeed*this.joystickReturnSpeed&&(u=o,f=r),this._front.style.marginLeft=u+"px",this._front.style.marginTop=f+"px"}},{key:"_onMoveTouchChange",value:function(e){v=this._moveJoystickCont.offsetLeft+this._back.clientWidth/2,g=this._moveJoystickCont.offsetTop+this._back.clientHeight/2,p=e.clientX-v,m=e.clientY-g,E=this._back.clientWidth/2-this._front.clientWidth/2,y=this._back.clientHeight/2-this._front.clientHeight/2,b=Math.sqrt(p*p+m*m)/(this._moveJoystickCont.clientWidth/2),b>1&&(p/=b,m/=b),this._front.style.marginLeft=E+p+"px",this._front.style.marginTop=y+m+"px",p/=this._moveJoystickCont.clientWidth/2,m/=this._moveJoystickCont.clientWidth/2,this.walkerVars.moveForward=m<0,this.walkerVars.moveBackward=m>0,this.walkerVars.moveRight=p>0,this.walkerVars.moveLeft=p<0,this.walkerVars.moveForwardBackMultiplier=Math.abs(m),this.walkerVars.moveLeftRightMultiplier=Math.abs(p)}},{key:"_onLookTouchChange",value:function(e){p=e.screenX-this.lastLookTouchPos.x,m=-(e.screenY-this.lastLookTouchPos.y),this.walkerVars.mobileLookLeftRight=p,this.walkerVars.mobileLookUpDown=m,this.lastLookTouchPos.set(e.screenX,e.screenY)}},{key:"_createDivs",value:function(){this._moveJoystickCont=document.createElement("div.moveJoystickCont"),this._back=document.createElement("div.moveJoystickBack"),this._front=document.createElement("div.moveJoystickFront"),this._moveJoystickCont.appendChild(this._back),this._back.appendChild(this._front),this._lookJoystickCont=document.createElement("div.lookJoystickCont"),this._jumpButtonCont=document.createElement("div.jumpButtonCont"),this._jumpButton=document.createElement("div.jumpButton"),this._jumpButton.innerHTML="Jump",this._jumpButtonCont.appendChild(this._jumpButton)}},{key:"_applyStyles",value:function(){var e=this._moveJoystickCont,t=this._back,n=this._front,i=this._lookJoystickCont;e.style.position="absolute",e.style.left="5vw",e.style.bottom="10vh",e.style.width="25vw",e.style.height="25vw",e.style.zIndex="1",t.style.width="100%",t.style.height="100%",t.style.display="table",t.style.backgroundColor="#333333",t.style.opacity="0.6",t.style.borderRadius="50%",n.style.width="50%",n.style.height="50%",n.style.display="block",n.style.backgroundColor="#000000",n.style.borderRadius="50%",n.style.borderStyle="dashed",n.style.borderColor="white",i.style.height="80%",i.style.position="absolute",i.style.width="100%",i.style.bottom="0",i.style.right="0",this._jumpButtonCont.className="exitWalkerMobile",this._jumpButton.className="exitWalkerMobileButton",this._jumpButtonCont.style.display="table",this._jumpButtonCont.style.right="0",this._jumpButtonCont.style.left="auto"}}]),e}();t.default=_},function(e,t){THREE.OrbitControls=function(e,t){function n(){return 2*Math.PI/60/60*O.autoRotateSpeed}function i(){return Math.pow(.95,O.zoomSpeed)}function o(e){z.theta-=e}function r(e){z.phi-=e}function a(e){O.object instanceof THREE.PerspectiveCamera?F/=e:O.object instanceof THREE.OrthographicCamera?(O.object.zoom=Math.max(O.minZoom,Math.min(O.maxZoom,O.object.zoom*e)),O.object.updateProjectionMatrix(),G=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),O.enableZoom=!1)}function s(e){O.object instanceof THREE.PerspectiveCamera?F*=e:O.object instanceof THREE.OrthographicCamera?(O.object.zoom=Math.max(O.minZoom,Math.min(O.maxZoom,O.object.zoom/e)),O.object.updateProjectionMatrix(),G=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),O.enableZoom=!1)}function l(e){W.set(e.clientX,e.clientY)}function c(e){J.set(e.clientX,e.clientY)}function d(e){q.set(e.clientX,e.clientY)}function u(e){Y.set(e.clientX,e.clientY),X.subVectors(Y,W);var t=O.domElement===document?O.domElement.body:O.domElement;o(2*Math.PI*X.x/t.clientWidth*O.rotateSpeed),r(2*Math.PI*X.y/t.clientHeight*O.rotateSpeed),W.copy(Y),O.update()}function f(e){Q.set(e.clientX,e.clientY),$.subVectors(Q,J),$.y>0?a(i()):$.y<0&&s(i()),J.copy(Q),O.update()}function h(e){Z.set(e.clientX,e.clientY),K.subVectors(Z,q),ne(K.x,K.y),q.copy(Z),O.update()}function p(e){}function m(e){e.deltaY<0?s(i()):e.deltaY>0&&a(i()),O.update()}function v(e){switch(e.keyCode){case O.keys.UP:ne(0,O.keyPanSpeed),O.update();break;case O.keys.BOTTOM:ne(0,-O.keyPanSpeed),O.update();break;case O.keys.LEFT:ne(O.keyPanSpeed,0),O.update();break;case O.keys.RIGHT:ne(-O.keyPanSpeed,0),O.update()}}function g(e){W.set(e.touches[0].pageX,e.touches[0].pageY)}function E(e){var t=e.touches[0].pageX-e.touches[1].pageX,n=e.touches[0].pageY-e.touches[1].pageY,i=Math.sqrt(t*t+n*n);J.set(0,i)}function y(e){q.set(e.touches[0].pageX,e.touches[0].pageY)}function b(e){Y.set(e.touches[0].pageX,e.touches[0].pageY),X.subVectors(Y,W);var t=O.domElement===document?O.domElement.body:O.domElement;o(2*Math.PI*X.x/t.clientWidth*O.rotateSpeed),r(2*Math.PI*X.y/t.clientHeight*O.rotateSpeed),W.copy(Y),O.update()}function _(e){var t=e.touches[0].pageX-e.touches[1].pageX,n=e.touches[0].pageY-e.touches[1].pageY,o=Math.sqrt(t*t+n*n);Q.set(0,o),$.subVectors(Q,J),$.y>0?s(i()):$.y<0&&a(i()),J.copy(Q),O.update()}function w(e){Z.set(e.touches[0].pageX,e.touches[0].pageY),K.subVectors(Z,q),ne(K.x,K.y),q.copy(Z),O.update()}function M(e){}function x(e){if(O.enabled!==!1){if(e.preventDefault(),e.button===O.mouseButtons.ORBIT){if(O.enableRotate===!1)return;l(e),U=H.ROTATE}else if(e.button===O.mouseButtons.ZOOM){if(O.enableZoom===!1)return;c(e),U=H.DOLLY}else if(e.button===O.mouseButtons.PAN){if(O.enablePan===!1)return;d(e),U=H.PAN}U!==H.NONE&&(document.addEventListener("mousemove",S,!1),document.addEventListener("mouseup",T,!1),O.dispatchEvent(A))}}function S(e){if(O.enabled!==!1)if(e.preventDefault(),U===H.ROTATE){if(O.enableRotate===!1)return;u(e)}else if(U===H.DOLLY){if(O.enableZoom===!1)return;f(e)}else if(U===H.PAN){if(O.enablePan===!1)return;h(e)}}function T(e){O.enabled!==!1&&(p(e),document.removeEventListener("mousemove",S,!1),document.removeEventListener("mouseup",T,!1),O.dispatchEvent(N),U=H.NONE)}function P(e){O.enabled===!1||O.enableZoom===!1||U!==H.NONE&&U!==H.ROTATE||(e.preventDefault(),e.stopPropagation(),m(e),O.dispatchEvent(A),O.dispatchEvent(N))}function L(e){O.enabled!==!1&&O.enableKeys!==!1&&O.enablePan!==!1&&v(e)}function R(e){if(O.enabled!==!1){switch(e.touches.length){case 1:if(O.enableRotate===!1)return;g(e),U=H.TOUCH_ROTATE;break;case 2:if(O.enableZoom===!1)return;E(e),U=H.TOUCH_DOLLY;break;case 3:if(O.enablePan===!1)return;y(e),U=H.TOUCH_PAN;break;default:U=H.NONE}U!==H.NONE&&O.dispatchEvent(A)}}function C(e){if(O.enabled!==!1)switch(e.preventDefault(),e.stopPropagation(),e.touches.length){case 1:if(O.enableRotate===!1)return;if(U!==H.TOUCH_ROTATE)return;b(e);break;case 2:if(O.enableZoom===!1)return;if(U!==H.TOUCH_DOLLY)return;_(e);break;case 3:if(O.enablePan===!1)return;if(U!==H.TOUCH_PAN)return;w(e);break;default:U=H.NONE}}function k(e){O.enabled!==!1&&(M(e),O.dispatchEvent(N),U=H.NONE)}function D(e){e.preventDefault()}this.object=e,this.domElement=void 0!==t?t:document,this.enabled=!0,this.target=new THREE.Vector3,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-(1/0),this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.25,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.enableKeys=!0,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={ORBIT:THREE.MOUSE.LEFT,ZOOM:THREE.MOUSE.MIDDLE,PAN:THREE.MOUSE.RIGHT},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=function(){return V.phi},this.getAzimuthalAngle=function(){return V.theta},this.reset=function(){O.target.copy(O.target0),O.object.position.copy(O.position0),O.object.zoom=O.zoom0,O.object.updateProjectionMatrix(),O.dispatchEvent(I),O.update(),U=H.NONE},this.update=function(){var t=new THREE.Vector3,i=(new THREE.Quaternion).setFromUnitVectors(e.up,new THREE.Vector3(0,1,0)),r=i.clone().inverse(),a=new THREE.Vector3,s=new THREE.Quaternion;return function(){var e=O.object.position;return t.copy(e).sub(O.target),t.applyQuaternion(i),V.setFromVector3(t),O.autoRotate&&U===H.NONE&&o(n()),V.theta+=z.theta,V.phi+=z.phi,V.theta=Math.max(O.minAzimuthAngle,Math.min(O.maxAzimuthAngle,V.theta)),V.phi=Math.max(O.minPolarAngle,Math.min(O.maxPolarAngle,V.phi)),V.makeSafe(),V.radius*=F,V.radius=Math.max(O.minDistance,Math.min(O.maxDistance,V.radius)),O.target.add(B),t.setFromSpherical(V),t.applyQuaternion(r),e.copy(O.target).add(t),
O.object.lookAt(O.target),O.enableDamping===!0?(z.theta*=1-O.dampingFactor,z.phi*=1-O.dampingFactor):z.set(0,0,0),F=1,B.set(0,0,0),!!(G||a.distanceToSquared(O.object.position)>j||8*(1-s.dot(O.object.quaternion))>j)&&(O.dispatchEvent(I),a.copy(O.object.position),s.copy(O.object.quaternion),G=!1,!0)}}(),this.dispose=function(){O.domElement.removeEventListener("contextmenu",D,!1),O.domElement.removeEventListener("mousedown",x,!1),O.domElement.removeEventListener("wheel",P,!1),O.domElement.removeEventListener("touchstart",R,!1),O.domElement.removeEventListener("touchend",k,!1),O.domElement.removeEventListener("touchmove",C,!1),document.removeEventListener("mousemove",S,!1),document.removeEventListener("mouseup",T,!1),window.removeEventListener("keydown",L,!1)};var O=this,I={type:"change"},A={type:"start"},N={type:"end"},H={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_DOLLY:4,TOUCH_PAN:5},U=H.NONE,j=1e-6,V=new THREE.Spherical,z=new THREE.Spherical,F=1,B=new THREE.Vector3,G=!1,W=new THREE.Vector2,Y=new THREE.Vector2,X=new THREE.Vector2,q=new THREE.Vector2,Z=new THREE.Vector2,K=new THREE.Vector2,J=new THREE.Vector2,Q=new THREE.Vector2,$=new THREE.Vector2,ee=function(){var e=new THREE.Vector3;return function(t,n){e.setFromMatrixColumn(n,0),e.multiplyScalar(-t),B.add(e)}}(),te=function(){var e=new THREE.Vector3;return function(t,n){e.setFromMatrixColumn(n,1),e.multiplyScalar(t),B.add(e)}}(),ne=function(){var e=new THREE.Vector3;return function(t,n){var i=O.domElement===document?O.domElement.body:O.domElement;if(O.object instanceof THREE.PerspectiveCamera){var o=O.object.position;e.copy(o).sub(O.target);var r=e.length();r*=Math.tan(O.object.fov/2*Math.PI/180),ee(2*t*r/i.clientHeight,O.object.matrix),te(2*n*r/i.clientHeight,O.object.matrix)}else O.object instanceof THREE.OrthographicCamera?(ee(t*(O.object.right-O.object.left)/O.object.zoom/i.clientWidth,O.object.matrix),te(n*(O.object.top-O.object.bottom)/O.object.zoom/i.clientHeight,O.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),O.enablePan=!1)}}();O.domElement.addEventListener("contextmenu",D,!1),O.domElement.addEventListener("mousedown",x,!1),O.domElement.addEventListener("wheel",P,!1),O.domElement.addEventListener("touchstart",R,!1),O.domElement.addEventListener("touchend",k,!1),O.domElement.addEventListener("touchmove",C,!1),window.addEventListener("keydown",L,!1),this.update()},THREE.OrbitControls.prototype=Object.create(THREE.EventDispatcher.prototype),THREE.OrbitControls.prototype.constructor=THREE.OrbitControls,Object.defineProperties(THREE.OrbitControls.prototype,{center:{get:function(){return console.warn("THREE.OrbitControls: .center has been renamed to .target"),this.target}},noZoom:{get:function(){return console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."),!this.enableZoom},set:function(e){console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."),this.enableZoom=!e}},noRotate:{get:function(){return console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."),!this.enableRotate},set:function(e){console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."),this.enableRotate=!e}},noPan:{get:function(){return console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."),!this.enablePan},set:function(e){console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."),this.enablePan=!e}},noKeys:{get:function(){return console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."),!this.enableKeys},set:function(e){console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."),this.enableKeys=!e}},staticMoving:{get:function(){return console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."),!this.enableDamping},set:function(e){console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."),this.enableDamping=!e}},dynamicDampingFactor:{get:function(){return console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."),this.dampingFactor},set:function(e){console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."),this.dampingFactor=e}}})},function(e,t){"use strict";THREE.PointerLockControls=function(e,t){var n=this;n.domElement=void 0!==t?t:document,e.rotation.set(0,0,0);var i=new THREE.Object3D;i.add(e);var o=new THREE.Object3D;o.add(i);var r=Math.PI/2,a=function(e){if(n.enabled!==!1){var t=0,a=0;(n.mouseLastPos.x||n.mouseLastPos.y)&&(t=e.clientX-n.mouseLastPos.x,a=e.clientY-n.mouseLastPos.y,n.mouseLastPos.x=e.clientX,n.mouseLastPos.y=e.clientY);var s=e.movementX||e.mozMovementX||e.webkitMovementX||t,l=e.movementY||e.mozMovementY||e.webkitMovementY||a;o.rotation.y-=.002*s,i.rotation.x-=.002*l,i.rotation.x=Math.max(-r,Math.min(r,i.rotation.x))}};this.dispose=function(){document.removeEventListener("mousemove",a,!1)},document.addEventListener("mousemove",a,!1),this.enabled=!1,this.touchId=null,this.touchLastPos={x:null,y:null},this.mouseLastPos={x:null,y:null},this.getObject=function(){return o},this.getDirection=function(){var e=new THREE.Vector3(0,0,-1),t=new THREE.Euler(0,0,0,"YXZ");return function(n){return t.set(i.rotation.x,o.rotation.y,0),n.copy(e).applyEuler(t),n}}()}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),a=n(3),s=i(a),l=n(5),c=i(l),d=n(40),u=i(d),f=new Event("startIntro"),h=new Event("pause"),p=new Event("unpause"),m=new Event("interact"),v=function(){function e(t){o(this,e),s.default.isDebug&&(this.statsUi=new u.default(t));var n=document.getElementById("newGameRoot");n.style.display="block";var i=document.getElementById("startQuestButton"),r=document.getElementById("pauseMobile"),a=document.getElementById("pauseMobileButton");a.addEventListener("click",function(){r.style.display="none",document.dispatchEvent(h)}),i.addEventListener("click",function(){n.style.display="none",s.default.isDesktop||(r.style.display="table"),document.dispatchEvent(f)});var l=document.getElementById("startAgainButton");l.addEventListener("click",function(){location.reload()});for(var d=document.getElementsByClassName("goToSourceButton"),v=0;v<d.length;v++)d[v].addEventListener("click",this.gotoSource);document.addEventListener("keydown",function(e){69===e.keyCode&&document.dispatchEvent(m)}),this.initControlPanelUI();var g=document.getElementById("continueButton"),E=document.getElementById("pauseMenuRoot");g.addEventListener("click",function(){E.style.display="none",document.dispatchEvent(p)});var y=document.getElementById("interactInfo");s.default.isDesktop||(y.innerHTML="Press to interact",y.style.left="78%",y.style.bottom="25%",y.style.lineHeight="25px"),document.addEventListener("pause",function(){y.style.display="none",c.default.win||c.default.lose||c.default.controlPanelActive||(E.style.display="block")}),document.addEventListener("unpause",function(){s.default.isDesktop||(r.style.display="table")})}return r(e,[{key:"initControlPanelUI",value:function(){var e=this,t=document.getElementById("controlPanelRoot"),n=function(){t.style.display="none",c.default.controlPanelActive=!1,document.dispatchEvent(p)};document.addEventListener("activateControlPanel",function(){t.style.display="block"});var i=document.getElementById("controlPanelButton1");i.addEventListener("click",function(){c.default.engineEnabled||(c.default.engineEnabled=!0,n(),e.popupMessage("Engine power on!"))});var o=document.getElementById("controlPanelButton2");o.addEventListener("click",function(){c.default.engineEnabled=!1,n(),e.popupMessage("Engine is now de-energized!")});var r=document.getElementById("controlPanelButton3");r.addEventListener("click",function(){n()})}},{key:"gotoSource",value:function(){window.open(s.default.repoUrl,"_blank")}},{key:"popupMessage",value:function(e){var t=document.createElement("div");t.className=s.default.isDesktop?"disposeInfo":"disposeInfoMobile",t.innerHTML=e,t.style.display="block",document.body.appendChild(t),setTimeout(function(){t.className=s.default.isDesktop?"disposeInfoHidden":"disposeInfoHiddenMobile"},1e3),setTimeout(function(){document.body.removeChild(t)},2e3)}},{key:"update",value:function(){this.statsUi&&this.statsUi.update()}}]),e}();t.default=v},function(e,t,n){"use strict";function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),r=n(41),a=[["drawcalls","render","calls",0],["programs","programs","length",0],["geometries","memory","geometries",0],["textures","memory","textures",0],["faces","render","faces",0]],s=null,l=null,c=function(){function e(t){i(this,e),this.rInfo=t.info,this.stats=new r;var n=this.createRenderInfoDiv(),o=this.createRenderInfoTableDiv();n.appendChild(o),this.stats.domElement.appendChild(n),document.body.appendChild(this.stats.domElement)}return o(e,[{key:"update",value:function(){this.updateRenderInfo(),this.stats.update()}},{key:"updateRenderInfo",value:function(){for(s=0;s<a.length;s++)l=this.rInfo[a[s][1]][a[s][2]],l!==a[s][3]&&(a[s][3]=l,a[s][4].nodeValue=l)}},{key:"createRenderInfoDiv",value:function(){var e=document.createElement("div");return e.id="render-info",e.style.width="80px",e.style.backgroundColor="rgb(0, 0, 34)",e.style.color="rgb(0, 255, 255)",e.style.fontSize="11px",e.style.fontFamily="Helvetica, Arial, sans-serif",e}},{key:"createRenderInfoTableDiv",value:function(){var e=document.createElement("TABLE"),t=document.createElement("TBODY");e.appendChild(t);var n=void 0,i=void 0,o=void 0;for(s=0;s<a.length;s++)n=document.createElement("TR"),t.appendChild(n),i=document.createElement("TD"),i.width=35,i.style.maxWidth="35px",i.appendChild(document.createTextNode(a[s][0])),n.appendChild(i),i=document.createElement("TD"),i.width=35,i.style.textAlign="right",i.style.float="right",o=document.createTextNode(a[s][3]),a[s].push(o),i.appendChild(o),n.appendChild(i);return e}}]),e}();t.default=c},function(e,t,n){var i=function(){var e=Date.now(),t=e,n=0,i=1/0,o=0,r=0,a=1/0,s=0,l=0,c=0,d=document.createElement("div");d.id="stats",d.addEventListener("mousedown",function(e){e.preventDefault(),E(++c%2)},!1),d.style.cssText="width:80px;opacity:0.9;cursor:pointer";var u=document.createElement("div");u.id="fps",u.style.cssText="padding:0 0 3px 3px;text-align:left;background-color:#002",d.appendChild(u);var f=document.createElement("div");f.id="fpsText",f.style.cssText="color:#0ff;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px",f.innerHTML="FPS",u.appendChild(f);var h=document.createElement("div");for(h.id="fpsGraph",h.style.cssText="position:relative;width:74px;height:30px;background-color:#0ff",u.appendChild(h);h.children.length<74;){var p=document.createElement("span");p.style.cssText="width:1px;height:30px;float:left;background-color:#113",h.appendChild(p)}var m=document.createElement("div");m.id="ms",m.style.cssText="padding:0 0 3px 3px;text-align:left;background-color:#020;display:none",d.appendChild(m);var v=document.createElement("div");v.id="msText",v.style.cssText="color:#0f0;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px",v.innerHTML="MS",m.appendChild(v);var g=document.createElement("div");for(g.id="msGraph",g.style.cssText="position:relative;width:74px;height:30px;background-color:#0f0",m.appendChild(g);g.children.length<74;){var p=document.createElement("span");p.style.cssText="width:1px;height:30px;float:left;background-color:#131",g.appendChild(p)}var E=function(e){switch(c=e){case 0:u.style.display="block",m.style.display="none";break;case 1:u.style.display="none",m.style.display="block"}},y=function(e,t){var n=e.appendChild(e.firstChild);n.style.height=t+"px"};return{REVISION:12,domElement:d,setMode:E,begin:function(){e=Date.now()},end:function(){var c=Date.now();return n=c-e,i=Math.min(i,n),o=Math.max(o,n),v.textContent=n+" MS ("+i+"-"+o+")",y(g,Math.min(30,30-n/200*30)),l++,c>t+1e3&&(r=Math.round(1e3*l/(c-t)),a=Math.min(a,r),s=Math.max(s,r),f.textContent=r+" FPS ("+a+"-"+s+")",y(h,Math.min(30,30-r/100*30)),t=c,l=0),c},update:function(){e=this.end()}}};e.exports=i},function(e,t){"use strict";e.exports=function(){if(window.WebGLRenderingContext){for(var e=document.createElement("canvas"),t=["webgl","experimental-webgl","moz-webgl"],n=!1,i=0;i<t.length;i++)try{if(n=e.getContext(t[i]),n&&"function"==typeof n.getParameter)return!0}catch(e){console.log("Unable to initialize WebGL. Your browser may not support it.")}return!1}return!1}}]);